import contextlib
import json
from datetime import timezone
from pathlib import Path
from typing import List
from unittest.mock import patch

import pytest
from faker import Faker
from ogmios import Client
from ogmios.datatypes import EraSummary
from pycardano.crypto.bech32 import CHARSET

from pccontext import (
    DATE_FORMAT_2,
    CardanoCliChainContext,
    OgmiosChainContext,
    YaciDevkitChainContext,
)
from pccontext.enums import Era, Network, TransactionType
from pccontext.models.genesis_parameters_model import GenesisParameters
from pccontext.utils.file_utils import base64_encoded_file


@pytest.fixture
def query_tip_result():
    return {
        "block": 1460093,
        "epoch": 98,
        "era": "Babbage",
        "hash": "c1bda7b2975dd3bf9969a57d92528ba7d60383b6e1c4a37b68379c4f4330e790",
        "slot": 41008115,
        "slotInEpoch": 313715,
        "slotsToEpochEnd": 118285,
        "syncProgress": "100.00",
    }


@pytest.fixture
def query_protocol_parameters_result():
    return {
        "collateralPercentage": 150,
        "committeeMaxTermLength": 146,
        "committeeMinSize": 7,
        "costModels": {
            "PlutusV1": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                228465,
                122,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                85848,
                228465,
                122,
                0,
                1,
                1,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                53384111,
                14333,
                10,
            ],
            "PlutusV2": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                228465,
                122,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                85848,
                228465,
                122,
                0,
                1,
                1,
                955506,
                213312,
                0,
                2,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                43053543,
                10,
                53384111,
                14333,
                10,
                43574283,
                26308,
                10,
            ],
            "PlutusV3": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                1,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                955506,
                213312,
                0,
                2,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                43053543,
                10,
                53384111,
                14333,
                10,
                43574283,
                26308,
                10,
                16000,
                100,
                16000,
                100,
                962335,
                18,
                2780678,
                6,
                442008,
                1,
                52538055,
                3756,
                18,
                267929,
                18,
                76433006,
                8868,
                18,
                52948122,
                18,
                1995836,
                36,
                3227919,
                12,
                901022,
                1,
                166917843,
                4307,
                36,
                284546,
                36,
                158221314,
                26549,
                36,
                74698472,
                36,
                333849714,
                1,
                254006273,
                72,
                2174038,
                72,
                2261318,
                64571,
                4,
                207616,
                8310,
                4,
                1293828,
                28716,
                63,
                0,
                1,
                1006041,
                43623,
                251,
                0,
                1,
            ],
        },
        "dRepActivity": 20,
        "dRepDeposit": 500000000,
        "dRepVotingThresholds": {
            "committeeNoConfidence": 0.6,
            "committeeNormal": 0.67,
            "hardForkInitiation": 0.6,
            "motionNoConfidence": 0.67,
            "ppEconomicGroup": 0.67,
            "ppGovGroup": 0.75,
            "ppNetworkGroup": 0.67,
            "ppTechnicalGroup": 0.67,
            "treasuryWithdrawal": 0.67,
            "updateToConstitution": 0.75,
        },
        "executionUnitPrices": {"priceMemory": 0.0577, "priceSteps": 0.0000721},
        "govActionDeposit": 100000000000,
        "govActionLifetime": 6,
        "maxBlockBodySize": 90112,
        "maxBlockExecutionUnits": {"memory": 62000000, "steps": 20000000000},
        "maxBlockExecutionUnitsMemory": 62000000,
        "maxBlockExecutionUnitsSteps": 20000000000,
        "maxBlockHeaderSize": 1100,
        "maxCollateralInputs": 3,
        "maxTxExecutionUnits": {"memory": 14000000, "steps": 10000000000},
        "maxTxExecutionUnitsMemory": 14000000,
        "maxTxExecutionUnitsSteps": 10000000000,
        "maxTxSize": 16384,
        "maxValueSize": 5000,
        "minFeeRefScriptCostPerByte": 15,
        "minPoolCost": 170000000,
        "minUTxOValue": 4310,
        "monetaryExpansion": 0.003,
        "poolPledgeInfluence": 0.3,
        "poolRetireMaxEpoch": 18,
        "poolVotingThresholds": {
            "committeeNoConfidence": 0.51,
            "committeeNormal": 0.51,
            "hardForkInitiation": 0.51,
            "motionNoConfidence": 0.51,
            "ppSecurityGroup": 0.51,
        },
        "protocolVersion": {"major": 9, "minor": 0},
        "protocolVersionMajor": 9,
        "protocolVersionMinor": 0,
        "stakeAddressDeposit": 2000000,
        "stakePoolDeposit": 500000000,
        "stakePoolTargetNum": 500,
        "treasuryCut": 0.2,
        "txFeeFixed": 155381,
        "txFeePerByte": 44,
        "decentralization": None,
        "extraPraosEntropy": None,
        "executionUnitPricesPriceMemory": 0.0577,
        "executionUnitPricesPriceSteps": 0.0000721,
        "coinsPerUtxoWord": 34482,
        "coinsPerUtxoByte": 4310,
        "utxoCostPerByte": 4310,
    }


@pytest.fixture
def query_utxo_result():
    return {
        "fbaa018740241abb935240051134914389c3f94647d8bd6c30cb32d3fdb799bf#0": {
            "address": "addr1x8nz307k3sr60gu0e47cmajssy4fmld7u493a4xztjrll0aj764lvrxdayh2ux30fl0ktuh27csgmpevdu89jlxppvrswgxsta",
            "datum": None,
            "inlineDatum": {
                "constructor": 0,
                "fields": [
                    {
                        "constructor": 0,
                        "fields": [
                            {
                                "bytes": "2e11e7313e00ccd086cfc4f1c3ebed4962d31b481b6a153c23601c0f"
                            },
                            {"bytes": "636861726c69335f6164615f6e6674"},
                        ],
                    },
                    {"constructor": 0, "fields": [{"bytes": ""}, {"bytes": ""}]},
                    {
                        "constructor": 0,
                        "fields": [
                            {
                                "bytes": "8e51398904a5d3fc129fbf4f1589701de23c7824d5c90fdb9490e15a"
                            },
                            {"bytes": "434841524c4933"},
                        ],
                    },
                    {
                        "constructor": 0,
                        "fields": [
                            {
                                "bytes": "d8d46a3e430fab5dc8c5a0a7fc82abbf4339a89034a8c804bb7e6012"
                            },
                            {"bytes": "636861726c69335f6164615f6c71"},
                        ],
                    },
                    {"int": 997},
                    {
                        "list": [
                            {
                                "bytes": "4dd98a2ef34bc7ac3858bbcfdf94aaa116bb28ca7e01756140ba4d19"
                            }
                        ]
                    },
                    {"int": 10000000000},
                ],
            },
            "inlineDatumhash": "c56003cba9cfcf2f73cf6a5f4d6354d03c281bcd2bbd7a873d7475faa10a7123",
            "referenceScript": None,
            "value": {
                "2e11e7313e00ccd086cfc4f1c3ebed4962d31b481b6a153c23601c0f": {
                    "636861726c69335f6164615f6e6674": 1
                },
                "8e51398904a5d3fc129fbf4f1589701de23c7824d5c90fdb9490e15a": {
                    "434841524c4933": 1367726755
                },
                "d8d46a3e430fab5dc8c5a0a7fc82abbf4339a89034a8c804bb7e6012": {
                    "636861726c69335f6164615f6c71": 9223372035870126880
                },
                "lovelace": 708864940,
            },
        },
        "16824312f4b2cb37c967bc604f70aac51a7c08173d3464996be2f082547b5098#1": {
            "address": "addr1v9p0rc57dzkz7gg97dmsns8hngsuxl956xe6myjldaug7hse4elc6",
            "datum": None,
            "datumhash": "55fe36f482e21ff6ae2caf2e33c3565572b568852dccd3f317ddecb91463d780",
            "inlineDatum": None,
            "referenceScript": {
                "script": {
                    "cborHex": "",
                    "description": "",
                    "type": "PlutusScriptV2",
                },
                "scriptLanguage": "PlutusScriptLanguage PlutusScriptV2",
            },
            "value": {"lovelace": 25548890},
        },
    }


@pytest.fixture
def override_run_command(
    cmd: List[str],
    query_tip_result,
    query_protocol_parameters_result,
    query_utxo_result,
):
    """
    Override the run_command method of CardanoCliChainContext to return a mock result
    """
    if "tip" in cmd:
        return json.dumps(query_tip_result)
    if "protocol-parameters" in cmd:
        return json.dumps(query_protocol_parameters_result)
    if "utxo" in cmd:
        return json.dumps(query_utxo_result)
    if "txid" in cmd:
        return "270be16fa17cdb3ef683bf2c28259c978d4b7088792074f177c8efda247e23f7"
    if "version" in cmd:
        return "cardano-cli 8.1.2 - linux-x86_64 - ghc-8.10\ngit rev d2d90b48c5577b4412d5c9c9968b55f8ab4b9767"
    else:
        return None


@pytest.fixture
def chain_context(
    config_file,
    query_tip_result,
    query_protocol_parameters_result,
    query_utxo_result,
):
    """
    Create a CardanoCliChainContext with a mock run_command method
    """

    def override_run_command(cmd: List[str]):
        """
        Override the run_command method of CardanoCliChainContext to return a mock result
        """
        if "tip" in cmd:
            return json.dumps(query_tip_result)
        if "protocol-parameters" in cmd:
            return json.dumps(query_protocol_parameters_result)
        if (
            "stake-address-info" in cmd
            and "stake_test1upyz3gk6mw5he20apnwfn96cn9rscgvmmsxc9r86dh0k66gswf59n"
            in cmd
        ):
            return json.dumps(
                [
                    {
                        "delegationDeposit": 1000000000000,
                        "stakeDelegation": "pool1q8m9x2zsux7va6w892g38tvchnzahvcd9tykqf3ygnmwta8k2v59pcduem5uw253zwke30x9mwes62kfvqnzg38kuh6q966kg7",
                        "rewardAccountBalance": 1000000,
                        "voteDelegation": "always-abstain",
                    }
                ]
            )
        elif "stake-address-info" in cmd:
            return json.dumps([])
        if "utxo" in cmd:
            return json.dumps(query_utxo_result)
        if "txid" in cmd:
            return "270be16fa17cdb3ef683bf2c28259c978d4b7088792074f177c8efda247e23f7"
        if "version" in cmd:
            return "cardano-cli 8.1.2 - linux-x86_64 - ghc-8.10\ngit rev d2d90b48c5577b4412d5c9c9968b55f8ab4b9767"
        else:
            return None

    with patch(
        "pccontext.backend.cardano_cli.CardanoCliChainContext._run_command",
        side_effect=override_run_command,
    ):
        context = CardanoCliChainContext(
            binary=Path("cardano-cli"),
            socket=Path("node.socket"),
            config_file=config_file,
            network=Network.PREPROD,
        )
        context._run_command = override_run_command
    return context


@pytest.fixture(scope="session")
def fake_transaction_id():
    fake = Faker()
    return fake.hexify(
        text="^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
    )


@pytest.fixture(scope="session")
def fake_stake_address():
    fake = Faker()
    return fake.lexify(
        text="stake1?????????????????????????????????????????????????????",
        letters=CHARSET,
    )


@pytest.fixture(scope="session")
def fake_payment_address():
    return "addr1q8m9x2zsux7va6w892g38tvchnzahvcd9tykqf3ygnmwta8k2v59pcduem5uw253zwke30x9mwes62kfvqnzg38kuh6q966kg7"


@pytest.fixture(scope="session")
def fake_base16_address():
    fake = Faker()
    return fake.hexify(
        text="^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
    )


@pytest.fixture(scope="session")
def cli_alonzo_genesis_json():
    return {
        "lovelacePerUTxOWord": 34482,
        "executionPrices": {
            "prSteps": {"numerator": 721, "denominator": 10000000},
            "prMem": {"numerator": 577, "denominator": 10000},
        },
        "maxTxExUnits": {"exUnitsMem": 10000000, "exUnitsSteps": 10000000000},
        "maxBlockExUnits": {"exUnitsMem": 50000000, "exUnitsSteps": 40000000000},
        "maxValueSize": 5000,
        "collateralPercentage": 150,
        "maxCollateralInputs": 3,
        "costModels": {
            "PlutusV1": {
                "sha2_256-memory-arguments": 4,
                "equalsString-cpu-arguments-constant": 1000,
                "cekDelayCost-exBudgetMemory": 100,
                "lessThanEqualsByteString-cpu-arguments-intercept": 103599,
                "divideInteger-memory-arguments-minimum": 1,
                "appendByteString-cpu-arguments-slope": 621,
                "blake2b-cpu-arguments-slope": 29175,
                "iData-cpu-arguments": 150000,
                "encodeUtf8-cpu-arguments-slope": 1000,
                "unBData-cpu-arguments": 150000,
                "multiplyInteger-cpu-arguments-intercept": 61516,
                "cekConstCost-exBudgetMemory": 100,
                "nullList-cpu-arguments": 150000,
                "equalsString-cpu-arguments-intercept": 150000,
                "trace-cpu-arguments": 150000,
                "mkNilData-memory-arguments": 32,
                "lengthOfByteString-cpu-arguments": 150000,
                "cekBuiltinCost-exBudgetCPU": 29773,
                "bData-cpu-arguments": 150000,
                "subtractInteger-cpu-arguments-slope": 0,
                "unIData-cpu-arguments": 150000,
                "consByteString-memory-arguments-intercept": 0,
                "divideInteger-memory-arguments-slope": 1,
                "divideInteger-cpu-arguments-model-arguments-slope": 118,
                "listData-cpu-arguments": 150000,
                "headList-cpu-arguments": 150000,
                "chooseData-memory-arguments": 32,
                "equalsInteger-cpu-arguments-intercept": 136542,
                "sha3_256-cpu-arguments-slope": 82363,
                "sliceByteString-cpu-arguments-slope": 5000,
                "unMapData-cpu-arguments": 150000,
                "lessThanInteger-cpu-arguments-intercept": 179690,
                "mkCons-cpu-arguments": 150000,
                "appendString-memory-arguments-intercept": 0,
                "modInteger-cpu-arguments-model-arguments-slope": 118,
                "ifThenElse-cpu-arguments": 1,
                "mkNilPairData-cpu-arguments": 150000,
                "lessThanEqualsInteger-cpu-arguments-intercept": 145276,
                "addInteger-memory-arguments-slope": 1,
                "chooseList-memory-arguments": 32,
                "constrData-memory-arguments": 32,
                "decodeUtf8-cpu-arguments-intercept": 150000,
                "equalsData-memory-arguments": 1,
                "subtractInteger-memory-arguments-slope": 1,
                "appendByteString-memory-arguments-intercept": 0,
                "lengthOfByteString-memory-arguments": 4,
                "headList-memory-arguments": 32,
                "listData-memory-arguments": 32,
                "consByteString-cpu-arguments-intercept": 150000,
                "unIData-memory-arguments": 32,
                "remainderInteger-memory-arguments-minimum": 1,
                "bData-memory-arguments": 32,
                "lessThanByteString-cpu-arguments-slope": 248,
                "encodeUtf8-memory-arguments-intercept": 0,
                "cekStartupCost-exBudgetCPU": 100,
                "multiplyInteger-memory-arguments-intercept": 0,
                "unListData-memory-arguments": 32,
                "remainderInteger-cpu-arguments-model-arguments-slope": 118,
                "cekVarCost-exBudgetCPU": 29773,
                "remainderInteger-memory-arguments-slope": 1,
                "cekForceCost-exBudgetCPU": 29773,
                "sha2_256-cpu-arguments-slope": 29175,
                "equalsInteger-memory-arguments": 1,
                "indexByteString-memory-arguments": 1,
                "addInteger-memory-arguments-intercept": 1,
                "chooseUnit-cpu-arguments": 150000,
                "sndPair-cpu-arguments": 150000,
                "cekLamCost-exBudgetCPU": 29773,
                "fstPair-cpu-arguments": 150000,
                "quotientInteger-memory-arguments-minimum": 1,
                "decodeUtf8-cpu-arguments-slope": 1000,
                "lessThanInteger-memory-arguments": 1,
                "lessThanEqualsInteger-cpu-arguments-slope": 1366,
                "fstPair-memory-arguments": 32,
                "modInteger-memory-arguments-intercept": 0,
                "unConstrData-cpu-arguments": 150000,
                "lessThanEqualsInteger-memory-arguments": 1,
                "chooseUnit-memory-arguments": 32,
                "sndPair-memory-arguments": 32,
                "addInteger-cpu-arguments-intercept": 197209,
                "decodeUtf8-memory-arguments-slope": 8,
                "equalsData-cpu-arguments-intercept": 150000,
                "mapData-cpu-arguments": 150000,
                "mkPairData-cpu-arguments": 150000,
                "quotientInteger-cpu-arguments-constant": 148000,
                "consByteString-memory-arguments-slope": 1,
                "cekVarCost-exBudgetMemory": 100,
                "indexByteString-cpu-arguments": 150000,
                "unListData-cpu-arguments": 150000,
                "equalsInteger-cpu-arguments-slope": 1326,
                "cekStartupCost-exBudgetMemory": 100,
                "subtractInteger-cpu-arguments-intercept": 197209,
                "divideInteger-cpu-arguments-model-arguments-intercept": 425507,
                "divideInteger-memory-arguments-intercept": 0,
                "cekForceCost-exBudgetMemory": 100,
                "blake2b-cpu-arguments-intercept": 2477736,
                "remainderInteger-cpu-arguments-constant": 148000,
                "tailList-cpu-arguments": 150000,
                "encodeUtf8-cpu-arguments-intercept": 150000,
                "equalsString-cpu-arguments-slope": 1000,
                "lessThanByteString-memory-arguments": 1,
                "multiplyInteger-cpu-arguments-slope": 11218,
                "appendByteString-cpu-arguments-intercept": 396231,
                "lessThanEqualsByteString-cpu-arguments-slope": 248,
                "modInteger-memory-arguments-slope": 1,
                "addInteger-cpu-arguments-slope": 0,
                "equalsData-cpu-arguments-slope": 10000,
                "decodeUtf8-memory-arguments-intercept": 0,
                "chooseList-cpu-arguments": 150000,
                "constrData-cpu-arguments": 150000,
                "equalsByteString-memory-arguments": 1,
                "cekApplyCost-exBudgetCPU": 29773,
                "quotientInteger-memory-arguments-slope": 1,
                "verifySignature-cpu-arguments-intercept": 3345831,
                "unMapData-memory-arguments": 32,
                "mkCons-memory-arguments": 32,
                "sliceByteString-memory-arguments-slope": 1,
                "sha3_256-memory-arguments": 4,
                "ifThenElse-memory-arguments": 1,
                "mkNilPairData-memory-arguments": 32,
                "equalsByteString-cpu-arguments-slope": 247,
                "appendString-cpu-arguments-intercept": 150000,
                "quotientInteger-cpu-arguments-model-arguments-slope": 118,
                "cekApplyCost-exBudgetMemory": 100,
                "equalsString-memory-arguments": 1,
                "multiplyInteger-memory-arguments-slope": 1,
                "cekBuiltinCost-exBudgetMemory": 100,
                "remainderInteger-memory-arguments-intercept": 0,
                "sha2_256-cpu-arguments-intercept": 2477736,
                "remainderInteger-cpu-arguments-model-arguments-intercept": 425507,
                "lessThanEqualsByteString-memory-arguments": 1,
                "tailList-memory-arguments": 32,
                "mkNilData-cpu-arguments": 150000,
                "chooseData-cpu-arguments": 150000,
                "unBData-memory-arguments": 32,
                "blake2b-memory-arguments": 4,
                "iData-memory-arguments": 32,
                "nullList-memory-arguments": 32,
                "cekDelayCost-exBudgetCPU": 29773,
                "subtractInteger-memory-arguments-intercept": 1,
                "lessThanByteString-cpu-arguments-intercept": 103599,
                "consByteString-cpu-arguments-slope": 1000,
                "appendByteString-memory-arguments-slope": 1,
                "trace-memory-arguments": 32,
                "divideInteger-cpu-arguments-constant": 148000,
                "cekConstCost-exBudgetCPU": 29773,
                "encodeUtf8-memory-arguments-slope": 8,
                "quotientInteger-cpu-arguments-model-arguments-intercept": 425507,
                "mapData-memory-arguments": 32,
                "appendString-cpu-arguments-slope": 1000,
                "modInteger-cpu-arguments-constant": 148000,
                "verifySignature-cpu-arguments-slope": 1,
                "unConstrData-memory-arguments": 32,
                "quotientInteger-memory-arguments-intercept": 0,
                "equalsByteString-cpu-arguments-constant": 150000,
                "sliceByteString-memory-arguments-intercept": 0,
                "mkPairData-memory-arguments": 32,
                "equalsByteString-cpu-arguments-intercept": 112536,
                "appendString-memory-arguments-slope": 1,
                "lessThanInteger-cpu-arguments-slope": 497,
                "modInteger-cpu-arguments-model-arguments-intercept": 425507,
                "modInteger-memory-arguments-minimum": 1,
                "sha3_256-cpu-arguments-intercept": 0,
                "verifySignature-memory-arguments": 1,
                "cekLamCost-exBudgetMemory": 100,
                "sliceByteString-cpu-arguments-intercept": 150000,
            }
        },
    }


@pytest.fixture(scope="session")
def cli_byron_genesis_json():
    return {
        "bootStakeholders": {
            "05d1c10e4bf3cdd4de54712531c53be75a1609b25f396ffbbe5becf1": 1,
            "3bf1193b19be416283b8c0516d2f8b80939ffccb1c9b05946f54c83a": 1,
            "7bdd769bd872e8e6336c23f1e566c19a96e72137174b891fad9f4b99": 1,
            "9ddc1e29c59df0ddd9347fe8b8a736d247f286414684eddc02885348": 1,
            "a118c0d2737c8a77c0d982a0d299bc42614cea4e0c23614ba24a05ca": 1,
            "b0b2df3c9cf4dfe2ae04409913b3c3125509acbbfa0722449570aaeb": 1,
            "e0a65f21229e44c2bf6eec5b14e2775003b674ae53de18d22814346a": 1,
        },
        "heavyDelegation": {
            "05d1c10e4bf3cdd4de54712531c53be75a1609b25f396ffbbe5becf1": {
                "omega": 0,
                "issuerPk": "UFsjehyxQAIMxEL25RxqD0itM0RCdzWprVt1W+zopM5b7U9ru9AMr/zf9lAjWaFlNOpRgrrbz7r5tRbt8wUmSg==",
                "delegatePk": "iwlg0jS9pn1SQyxdGiasor+1uaCflm2Vkqe/DHKKHs2EDqxcP+in7doCSnQDttN3BZkIKLNUgzKj+FAiHCCYvw==",
                "cert": "633fc347138ee155d038b9d1040ee1e45cea5b1e8627046c95f7fe4ba949b0569437962568eadef9d49e22becbf30192425c008d10e03004612633dbc307340b",
            },
            "3bf1193b19be416283b8c0516d2f8b80939ffccb1c9b05946f54c83a": {
                "omega": 0,
                "issuerPk": "pAIACMG6WCa4mz0tVoeekLXYuWkdxk/rgDuZ/x7ugh3CvEuhpGf2LRRRWilaGdraH1sCbnuMCmAHrBTbPDFmxA==",
                "delegatePk": "0ajebKqP2bF1xZhi7N1avNBHe4S4Kg5S+uzGs8hRAKR1IW/7ZOp0U3AhQFuzKLD3BuSq1xV3leMWeBzKEg2slg==",
                "cert": "eb5c4d76c7bfca2ab790a76f7dc4c6d9f7d0956d4af3b8c649804ef98beeb138d8916982c9142747b7a07e69f52b2c3776d64a7d74494e0f72eefaebf6bf5d07",
            },
            "7bdd769bd872e8e6336c23f1e566c19a96e72137174b891fad9f4b99": {
                "omega": 0,
                "issuerPk": "P7JjeSPHjexNW5MsCaySrURaqV2gCgXttEe0CgfFnVZFGHaS9A4xEUrQ83VTLPjk+HV0Di19DjQ+DhS1M6Mf7A==",
                "delegatePk": "jvMgwt9mVKYYjEXpxjnApoa/WoZSlVh9OZ3+sF/nSrZ5YaaWsmjIvOyTcrxzqpsTZewAez36BTnqwA0VSjFRjA==",
                "cert": "9ef9f0e5ca23cd9365ec7a23f1b2d159da0d58e0242cb817c3bc946ba1c9e3629f1976f09a88370247bbc458c810d21a889e3ff6dd189ceea784bc9ab6dc9b0a",
            },
            "9ddc1e29c59df0ddd9347fe8b8a736d247f286414684eddc02885348": {
                "omega": 0,
                "issuerPk": "Xro6BbV6hMh3RTZnst4ABhtQ2vr83YPXoLfQ8JWeunvvcuudGBQvLeqwVfGXrBWoMOOKroFV48ygfSEq2xhREA==",
                "delegatePk": "mq5iXU0VvLNzPUIOBk8c0zjzhuCvBJ/NQrRVpp0orTZkg9F3uiuAG0E24NZmLl6eCiTyyAoOeNTCNbTAjyAfTA==",
                "cert": "939dcfe5555ee661b9db5d817a70d5c3fa9d1d97c2ae5849696d915606b530f7e9edda5d02a01e61524a766f9c356084616ba058a3de70ea51bf29cd187a5f07",
            },
            "a118c0d2737c8a77c0d982a0d299bc42614cea4e0c23614ba24a05ca": {
                "omega": 0,
                "issuerPk": "eqAAtu1X79MxCSa/i/RSApLGsnhDYqLJLu93f3wSzR5/M7calZS8DHFrAtJgzYbkg9nwKF1HQQ8bO/1LOJ9O4w==",
                "delegatePk": "lCuzqqsPZEK5BrZbpt2/eWnKpmLZCWiSYhGj1WUy8R2OjLStw/UDT7xiV/pbEIZoncfQJN9yJqpQH8KOui0fYw==",
                "cert": "b96ad354a6989df5de8d0888414843736d0a4a6626a1e595e8785a70b10a38eb4632159aabf84959983e8852fd4d390eba6c423fac8ea117913cec46353bd90e",
            },
            "b0b2df3c9cf4dfe2ae04409913b3c3125509acbbfa0722449570aaeb": {
                "omega": 0,
                "issuerPk": "Y+Vaj0IaMeq0+oWjQr5hiEl4Ek+cWsKq7mufTO4wue2R6A6AMlqEDIV7vYsd3NZWomG5DGcwSAw2Ev1Mz26LIA==",
                "delegatePk": "YYtiXfMN5TiV/ynno3cNylbC/wZtSqBaaXGQXe7O9tu33RDqH5F15Sk+reyXvxaxZ683mns+1K8DLNB7mezB6g==",
                "cert": "ca38e688e759183b57d08ca6568248b91c8ddd81e56d0d31c3f3a26eca35754387c5f301ef017dafae453a93757d39a0e2d326ebe59cf31d5c1b22fc8616ac00",
            },
            "e0a65f21229e44c2bf6eec5b14e2775003b674ae53de18d22814346a": {
                "omega": 0,
                "issuerPk": "vynbl3q/BFvwehgMzpp3NoWOuN5RwDUYCbNop0RR0jlEXomgPOrlXCwMTrwrI8Dcfzq5q1fK/1hOfv9IwDMPAA==",
                "delegatePk": "1N1ppBBxvC3I5kqX9L1jeVJM4MK2ZXKAQ6Bn400+IYr4mh4zTYciCsTJTyvY8IKIBBEcT3GYW6ZlaYy7XbY5kg==",
                "cert": "82b10bbea2dd80441315230354e3e4af0ac87d02c9e6424fc9432be21a6183c81555d3a1b373566aef7a8065a126d57c42629be780becc61bc1b8f3ce5b5170d",
            },
        },
        "startTime": 1654041600,
        "nonAvvmBalances": {
            "FHnt4NL7yPXhCzCHVywZLqVsvwuG3HvwmjKXQJBrXh3h2aigv6uxkePbpzRNV8q": "0",
            "FHnt4NL7yPXuJGViM3KwSPwrwECD9q5vNetX3QJDYRWgiX3RHi5i5VV32dnETDK": "0",
            "FHnt4NL7yPXuYUxBF33VX5dZMBDAab2kvSNLRzCskvuKNCSDknzrQvKeQhGUw5a": "30000000000000000",
            "FHnt4NL7yPY8exfnuJ8ACyoU7xCN93tKXSv357UrTp1nddGbkWxJpQfrt62xYFX": "0",
            "FHnt4NL7yPYFpVcAXZADrKdsqCAFvcRFYkTcqkn2guGmj8akQMiMVjhSUECvD1F": "0",
            "FHnt4NL7yPYH2vP2FLEfH2pt3K6meM7fgtjRiLBidaqpP5ogPzxLNsZy68e1KdW": "0",
            "FHnt4NL7yPYHrcxPtPufYYFWLhqvHGnZ5NFSz2KZpWQgSq4VLsUgWnkEmfUtd1E": "0",
            "FHnt4NL7yPYJiN5Y8VsQr6LP6YgN51BHBPegNjVwKkq6AooCkbTpfZ2bqkVkfXU": "0",
        },
        "blockVersionData": {
            "scriptVersion": 0,
            "slotDuration": "20000",
            "maxBlockSize": "2000000",
            "maxHeaderSize": "2000000",
            "maxTxSize": "4096",
            "maxProposalSize": "700",
            "mpcThd": "20000000000000",
            "heavyDelThd": "300000000000",
            "updateVoteThd": "1000000000000",
            "updateProposalThd": "100000000000000",
            "updateImplicit": "10000",
            "softforkRule": {
                "initThd": "900000000000000",
                "minThd": "600000000000000",
                "thdDecrement": "50000000000000",
            },
            "txFeePolicy": {"summand": "155381000000000", "multiplier": "43946000000"},
            "unlockStakeEpoch": "18446744073709551615",
        },
        "protocolConsts": {"k": 2160, "protocolMagic": 1},
        "avvmDistr": {},
    }


@pytest.fixture(scope="session")
def cli_conway_genesis_json():
    return {
        "poolVotingThresholds": {
            "committeeNormal": 0.51,
            "committeeNoConfidence": 0.51,
            "hardForkInitiation": 0.51,
            "motionNoConfidence": 0.51,
            "ppSecurityGroup": 0.51,
        },
        "dRepVotingThresholds": {
            "motionNoConfidence": 0.67,
            "committeeNormal": 0.67,
            "committeeNoConfidence": 0.6,
            "updateToConstitution": 0.75,
            "hardForkInitiation": 0.6,
            "ppNetworkGroup": 0.67,
            "ppEconomicGroup": 0.67,
            "ppTechnicalGroup": 0.67,
            "ppGovGroup": 0.75,
            "treasuryWithdrawal": 0.67,
        },
        "committeeMinSize": 7,
        "committeeMaxTermLength": 146,
        "govActionLifetime": 6,
        "govActionDeposit": 100000000000,
        "dRepDeposit": 500000000,
        "dRepActivity": 20,
        "minFeeRefScriptCostPerByte": 15,
        "plutusV3CostModel": [
            100788,
            420,
            1,
            1,
            1000,
            173,
            0,
            1,
            1000,
            59957,
            4,
            1,
            11183,
            32,
            201305,
            8356,
            4,
            16000,
            100,
            16000,
            100,
            16000,
            100,
            16000,
            100,
            16000,
            100,
            16000,
            100,
            100,
            100,
            16000,
            100,
            94375,
            32,
            132994,
            32,
            61462,
            4,
            72010,
            178,
            0,
            1,
            22151,
            32,
            91189,
            769,
            4,
            2,
            85848,
            123203,
            7305,
            -900,
            1716,
            549,
            57,
            85848,
            0,
            1,
            1,
            1000,
            42921,
            4,
            2,
            24548,
            29498,
            38,
            1,
            898148,
            27279,
            1,
            51775,
            558,
            1,
            39184,
            1000,
            60594,
            1,
            141895,
            32,
            83150,
            32,
            15299,
            32,
            76049,
            1,
            13169,
            4,
            22100,
            10,
            28999,
            74,
            1,
            28999,
            74,
            1,
            43285,
            552,
            1,
            44749,
            541,
            1,
            33852,
            32,
            68246,
            32,
            72362,
            32,
            7243,
            32,
            7391,
            32,
            11546,
            32,
            85848,
            123203,
            7305,
            -900,
            1716,
            549,
            57,
            85848,
            0,
            1,
            90434,
            519,
            0,
            1,
            74433,
            32,
            85848,
            123203,
            7305,
            -900,
            1716,
            549,
            57,
            85848,
            0,
            1,
            1,
            85848,
            123203,
            7305,
            -900,
            1716,
            549,
            57,
            85848,
            0,
            1,
            955506,
            213312,
            0,
            2,
            270652,
            22588,
            4,
            1457325,
            64566,
            4,
            20467,
            1,
            4,
            0,
            141992,
            32,
            100788,
            420,
            1,
            1,
            81663,
            32,
            59498,
            32,
            20142,
            32,
            24588,
            32,
            20744,
            32,
            25933,
            32,
            24623,
            32,
            43053543,
            10,
            53384111,
            14333,
            10,
            43574283,
            26308,
            10,
            16000,
            100,
            16000,
            100,
            962335,
            18,
            2780678,
            6,
            442008,
            1,
            52538055,
            3756,
            18,
            267929,
            18,
            76433006,
            8868,
            18,
            52948122,
            18,
            1995836,
            36,
            3227919,
            12,
            901022,
            1,
            166917843,
            4307,
            36,
            284546,
            36,
            158221314,
            26549,
            36,
            74698472,
            36,
            333849714,
            1,
            254006273,
            72,
            2174038,
            72,
            2261318,
            64571,
            4,
            207616,
            8310,
            4,
            1293828,
            28716,
            63,
            0,
            1,
            1006041,
            43623,
            251,
            0,
            1,
        ],
        "constitution": {
            "anchor": {
                "dataHash": "ca41a91f399259bcefe57f9858e91f6d00e1a38d6d9c63d4052914ea7bd70cb2",
                "url": "ipfs://bafkreifnwj6zpu3ixa4siz2lndqybyc5wnnt3jkwyutci4e2tmbnj3xrdm",
            },
            "script": "fa24fb305126805cf2164c161d852a0e7330cf988f1fe558cf7d4a64",
        },
        "committee": {
            "members": {
                "scriptHash-a6a5e006fd4e8f51062dc431362369b2a43140abced8aa2ff2256d7b": 229,
                "scriptHash-6095e643ea6f1cccb6e463ec34349026b3a48621aac5d512655ab1bf": 229,
                "scriptHash-94c0de47e7ae32e3f7234ada5cf976506b68e3bb88c54dc53b4ba984": 229,
                "scriptHash-5098dfd0deba725fadd692198fc33ee959fbe7e6edf1b5a695e06e61": 229,
                "scriptHash-5a71f17f4ce4c1c0be053575d717ade6ad8a1d5453d02a65ce40d4b1": 229,
                "scriptHash-2f4a6c6f098e20ee4bfd5b39942c164575f8ceb348e754df5d0ec04f": 229,
                "scriptHash-94f51c795a6c11adb9c1e30f0b6def4230cbd0b8bc800098e2d2307b": 229,
            },
            "threshold": {"numerator": 2, "denominator": 3},
        },
    }


@pytest.fixture(scope="session")
def cli_shelley_genesis_json():
    return {
        "activeSlotsCoeff": 0.05,
        "epochLength": 432000,
        "genDelegs": {
            "637f2e950b0fd8f8e3e811c5fbeb19e411e7a2bf37272b84b29c1a0b": {
                "delegate": "aae9293510344ddd636364c2673e34e03e79e3eefa8dbaa70e326f7d",
                "vrf": "227116365af2ed943f1a8b5e6557bfaa34996f1578eec667a5e2b361c51e4ce7",
            },
            "8a4b77c4f534f8b8cc6f269e5ebb7ba77fa63a476e50e05e66d7051c": {
                "delegate": "d15422b2e8b60e500a82a8f4ceaa98b04e55a0171d1125f6c58f8758",
                "vrf": "0ada6c25d62db5e1e35d3df727635afa943b9e8a123ab83785e2281605b09ce2",
            },
            "b00470cd193d67aac47c373602fccd4195aad3002c169b5570de1126": {
                "delegate": "b3b539e9e7ed1b32fbf778bf2ebf0a6b9f980eac90ac86623d11881a",
                "vrf": "0ff0ce9b820376e51c03b27877cd08f8ba40318f1a9f85a3db0b60dd03f71a7a",
            },
            "b260ffdb6eba541fcf18601923457307647dce807851b9d19da133ab": {
                "delegate": "7c64eb868b4ef566391a321c85323f41d2b95480d7ce56ad2abcb022",
                "vrf": "7fb22abd39d550c9a022ec8104648a26240a9ff9c88b8b89a6e20d393c03098e",
            },
            "ced1599fd821a39593e00592e5292bdc1437ae0f7af388ef5257344a": {
                "delegate": "de7ca985023cf892f4de7f5f1d0a7181668884752d9ebb9e96c95059",
                "vrf": "c301b7fc4d1b57fb60841bcec5e3d2db89602e5285801e522fce3790987b1124",
            },
            "dd2a7d71a05bed11db61555ba4c658cb1ce06c8024193d064f2a66ae": {
                "delegate": "1e113c218899ee7807f4028071d0e108fc790dade9fd1a0d0b0701ee",
                "vrf": "faf2702aa4893c877c622ab22dfeaf1d0c8aab98b837fe2bf667314f0d043822",
            },
            "f3b9e74f7d0f24d2314ea5dfbca94b65b2059d1ff94d97436b82d5b4": {
                "delegate": "fd637b08cc379ef7b99c83b416458fcda8a01a606041779331008fb9",
                "vrf": "37f2ea7c843a688159ddc2c38a2f997ab465150164a9136dca69564714b73268",
            },
        },
        "initialFunds": {},
        "maxKESEvolutions": 62,
        "maxLovelaceSupply": 45000000000000000,
        "networkId": "Testnet",
        "networkMagic": 1,
        "protocolParams": {
            "protocolVersion": {"minor": 0, "major": 2},
            "decentralisationParam": 1,
            "eMax": 18,
            "extraEntropy": {"tag": "NeutralNonce"},
            "maxTxSize": 16384,
            "maxBlockBodySize": 65536,
            "maxBlockHeaderSize": 1100,
            "minFeeA": 44,
            "minFeeB": 155381,
            "minUTxOValue": 1000000,
            "poolDeposit": 500000000,
            "minPoolCost": 340000000,
            "keyDeposit": 2000000,
            "nOpt": 150,
            "rho": 0.003,
            "tau": 0.20,
            "a0": 0.3,
        },
        "securityParam": 2160,
        "slotLength": 1,
        "slotsPerKESPeriod": 129600,
        "staking": {"pools": {}, "stake": {}},
        "systemStart": "2022-06-01T00:00:00Z",
        "updateQuorum": 5,
    }


@pytest.fixture(autouse=True)
def mock_check_socket():
    with patch("pathlib.Path.exists", return_value=True), patch(
        "pathlib.Path.is_socket", return_value=True
    ), patch("pathlib.Path.is_file", return_value=True):
        yield


@pytest.fixture(scope="session")
def alonzo_genesis_file(cli_alonzo_genesis_json):
    genesis_file_path = Path.cwd() / "alonzo-genesis.json"

    with open(genesis_file_path, "w", encoding="utf-8") as file:
        file.write(json.dumps(cli_alonzo_genesis_json, indent=4))

    yield genesis_file_path

    with contextlib.suppress(FileNotFoundError):
        genesis_file_path.unlink()


@pytest.fixture(scope="session")
def byron_genesis_file(cli_byron_genesis_json):
    genesis_file_path = Path.cwd() / "byron-genesis.json"

    with open(genesis_file_path, "w", encoding="utf-8") as file:
        file.write(json.dumps(cli_byron_genesis_json, indent=4))

    yield genesis_file_path

    with contextlib.suppress(FileNotFoundError):
        genesis_file_path.unlink()


@pytest.fixture(scope="session")
def conway_genesis_file(cli_conway_genesis_json):
    genesis_file_path = Path.cwd() / "conway-genesis.json"

    with open(genesis_file_path, "w", encoding="utf-8") as file:
        file.write(json.dumps(cli_conway_genesis_json, indent=4))

    yield genesis_file_path

    with contextlib.suppress(FileNotFoundError):
        genesis_file_path.unlink()


@pytest.fixture(scope="session")
def shelley_genesis_file(cli_shelley_genesis_json):
    genesis_file_path = Path.cwd() / "shelley-genesis.json"

    with open(genesis_file_path, "w", encoding="utf-8") as file:
        file.write(json.dumps(cli_shelley_genesis_json, indent=4))

    yield genesis_file_path

    with contextlib.suppress(FileNotFoundError):
        genesis_file_path.unlink()


@pytest.fixture(scope="session")
def config_file(
    alonzo_genesis_file, byron_genesis_file, conway_genesis_file, shelley_genesis_file
):
    config_file_path = Path.cwd() / "config.json"

    config_json = {
        "AlonzoGenesisFile": alonzo_genesis_file.as_posix(),
        "AlonzoGenesisHash": "7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874",
        "ApplicationName": "cardano-sl",
        "ApplicationVersion": 0,
        "ByronGenesisFile": byron_genesis_file.as_posix(),
        "ByronGenesisHash": "d4b8de7a11d929a323373cbab6c1a9bdc931beffff11db111cf9d57356ee1937",
        "ConwayGenesisFile": conway_genesis_file.as_posix(),
        "ConwayGenesisHash": "f28f1c1280ea0d32f8cd3143e268650d6c1a8e221522ce4a7d20d62fc09783e1",
        "EnableP2P": True,
        "LastKnownBlockVersion-Alt": 0,
        "LastKnownBlockVersion-Major": 2,
        "LastKnownBlockVersion-Minor": 0,
        "Protocol": "Cardano",
        "RequiresNetworkMagic": "RequiresMagic",
        "ShelleyGenesisFile": shelley_genesis_file.as_posix(),
        "ShelleyGenesisHash": "162d29c4e1cf6b8a84f2d692e67a3ac6bc7851bc3e6e4afe64d15778bed8bd86",
        "TargetNumberOfActivePeers": 20,
        "TargetNumberOfEstablishedPeers": 50,
        "TargetNumberOfKnownPeers": 100,
        "TargetNumberOfRootPeers": 100,
        "TraceAcceptPolicy": True,
        "TraceBlockFetchClient": False,
        "TraceBlockFetchDecisions": False,
        "TraceBlockFetchProtocol": False,
        "TraceBlockFetchProtocolSerialised": False,
        "TraceBlockFetchServer": False,
        "TraceChainDb": True,
        "TraceChainSyncBlockServer": False,
        "TraceChainSyncClient": False,
        "TraceChainSyncHeaderServer": False,
        "TraceChainSyncProtocol": False,
        "TraceConnectionManager": True,
        "TraceDNSResolver": True,
        "TraceDNSSubscription": True,
        "TraceDiffusionInitialization": True,
        "TraceErrorPolicy": True,
        "TraceForge": True,
        "TraceHandshake": False,
        "TraceInboundGovernor": True,
        "TraceIpSubscription": True,
        "TraceLedgerPeers": True,
        "TraceLocalChainSyncProtocol": False,
        "TraceLocalErrorPolicy": True,
        "TraceLocalHandshake": False,
        "TraceLocalRootPeers": True,
        "TraceLocalTxSubmissionProtocol": False,
        "TraceLocalTxSubmissionServer": False,
        "TraceMempool": True,
        "TraceMux": False,
        "TracePeerSelection": True,
        "TracePeerSelectionActions": True,
        "TracePublicRootPeers": True,
        "TraceServer": True,
        "TraceTxInbound": False,
        "TraceTxOutbound": False,
        "TraceTxSubmissionProtocol": False,
        "TracingVerbosity": "NormalVerbosity",
        "TurnOnLogMetrics": True,
        "TurnOnLogging": True,
        "defaultBackends": ["KatipBK"],
        "defaultScribes": [["StdoutSK", "stdout"]],
        "hasEKG": 12788,
        "hasPrometheus": ["0.0.0.0", 12798],
        "minSeverity": "Info",
        "options": {
            "mapBackends": {
                "cardano.node.metrics": ["EKGViewBK"],
                "cardano.node.resources": ["EKGViewBK"],
            },
            "mapSubtrace": {"cardano.node.metrics": {"subtrace": "Neutral"}},
        },
        "rotation": {
            "rpKeepFilesNum": 10,
            "rpLogLimitBytes": 5000000,
            "rpMaxAgeHours": 24,
        },
        "setupBackends": ["KatipBK"],
        "setupScribes": [
            {
                "scFormat": "ScText",
                "scKind": "StdoutSK",
                "scName": "stdout",
                "scRotation": None,
            }
        ],
    }

    with open(config_file_path, "w", encoding="utf-8") as file:
        file.write(json.dumps(config_json, indent=4))

    yield config_file_path

    with contextlib.suppress(FileNotFoundError):
        config_file_path.unlink()


@pytest.fixture()
def blockfrost_get_genesis_json():
    return {
        "active_slots_coefficient": 0.05,
        "update_quorum": 5,
        "max_lovelace_supply": "45000000000000000",
        "network_magic": 764824073,
        "epoch_length": 432000,
        "system_start": 1506203091,
        "slots_per_kes_period": 129600,
        "slot_length": 1,
        "max_kes_evolutions": 62,
        "security_param": 2160,
    }


@pytest.fixture()
def koios_get_genesis_json():
    return [
        {
            "networkmagic": "764824073",
            "networkid": "Mainnet",
            "activeslotcoeff": "0.05",
            "updatequorum": "5",
            "maxlovelacesupply": "45000000000000000",
            "epochlength": "432000",
            "systemstart": 1506203091,
            "slotsperkesperiod": "129600",
            "slotlength": "1",
            "maxkesrevolutions": "62",
            "securityparam": "2160",
            "alonzogenesis": '{"lovelacePerUTxOWord":34482,"executionPrices":{"prSteps":{"numerator":721,"denominator":10000000},"prMem":{"numerator":577,"denominator":10000}},"maxTxExUnits":{"exUnitsMem":10000000,"exUnitsSteps":10000000000},"maxBlockExUnits":{"exUnitsMem":50000000,"exUnitsSteps":40000000000},"maxValueSize":5000,"collateralPercentage":150,"maxCollateralInputs":3,"costModels":{"PlutusV1":{"sha2_256-memory-arguments":4,"equalsString-cpu-arguments-constant":1000,"cekDelayCost-exBudgetMemory":100,"lessThanEqualsByteString-cpu-arguments-intercept":103599,"divideInteger-memory-arguments-minimum":1,"appendByteString-cpu-arguments-slope":621,"blake2b-cpu-arguments-slope":29175,"iData-cpu-arguments":150000,"encodeUtf8-cpu-arguments-slope":1000,"unBData-cpu-arguments":150000,"multiplyInteger-cpu-arguments-intercept":61516,"cekConstCost-exBudgetMemory":100,"NoneList-cpu-arguments":150000,"equalsString-cpu-arguments-intercept":150000,"trace-cpu-arguments":150000,"mkNilData-memory-arguments":32,"lengthOfByteString-cpu-arguments":150000,"cekBuiltinCost-exBudgetCPU":29773,"bData-cpu-arguments":150000,"subtractInteger-cpu-arguments-slope":0,"unIData-cpu-arguments":150000,"consByteString-memory-arguments-intercept":0,"divideInteger-memory-arguments-slope":1,"divideInteger-cpu-arguments-model-arguments-slope":118,"listData-cpu-arguments":150000,"headList-cpu-arguments":150000,"chooseData-memory-arguments":32,"equalsInteger-cpu-arguments-intercept":136542,"sha3_256-cpu-arguments-slope":82363,"sliceByteString-cpu-arguments-slope":5000,"unMapData-cpu-arguments":150000,"lessThanInteger-cpu-arguments-intercept":179690,"mkCons-cpu-arguments":150000,"appendString-memory-arguments-intercept":0,"modInteger-cpu-arguments-model-arguments-slope":118,"ifThenElse-cpu-arguments":1,"mkNilPairData-cpu-arguments":150000,"lessThanEqualsInteger-cpu-arguments-intercept":145276,"addInteger-memory-arguments-slope":1,"chooseList-memory-arguments":32,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":150000,"equalsData-memory-arguments":1,"subtractInteger-memory-arguments-slope":1,"appendByteString-memory-arguments-intercept":0,"lengthOfByteString-memory-arguments":4,"headList-memory-arguments":32,"listData-memory-arguments":32,"consByteString-cpu-arguments-intercept":150000,"unIData-memory-arguments":32,"remainderInteger-memory-arguments-minimum":1,"bData-memory-arguments":32,"lessThanByteString-cpu-arguments-slope":248,"encodeUtf8-memory-arguments-intercept":0,"cekStartupCost-exBudgetCPU":100,"multiplyInteger-memory-arguments-intercept":0,"unListData-memory-arguments":32,"remainderInteger-cpu-arguments-model-arguments-slope":118,"cekVarCost-exBudgetCPU":29773,"remainderInteger-memory-arguments-slope":1,"cekForceCost-exBudgetCPU":29773,"sha2_256-cpu-arguments-slope":29175,"equalsInteger-memory-arguments":1,"indexByteString-memory-arguments":1,"addInteger-memory-arguments-intercept":1,"chooseUnit-cpu-arguments":150000,"sndPair-cpu-arguments":150000,"cekLamCost-exBudgetCPU":29773,"fstPair-cpu-arguments":150000,"quotientInteger-memory-arguments-minimum":1,"decodeUtf8-cpu-arguments-slope":1000,"lessThanInteger-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-slope":1366,"fstPair-memory-arguments":32,"modInteger-memory-arguments-intercept":0,"unConstrData-cpu-arguments":150000,"lessThanEqualsInteger-memory-arguments":1,"chooseUnit-memory-arguments":32,"sndPair-memory-arguments":32,"addInteger-cpu-arguments-intercept":197209,"decodeUtf8-memory-arguments-slope":8,"equalsData-cpu-arguments-intercept":150000,"mapData-cpu-arguments":150000,"mkPairData-cpu-arguments":150000,"quotientInteger-cpu-arguments-constant":148000,"consByteString-memory-arguments-slope":1,"cekVarCost-exBudgetMemory":100,"indexByteString-cpu-arguments":150000,"unListData-cpu-arguments":150000,"equalsInteger-cpu-arguments-slope":1326,"cekStartupCost-exBudgetMemory":100,"subtractInteger-cpu-arguments-intercept":197209,"divideInteger-cpu-arguments-model-arguments-intercept":425507,"divideInteger-memory-arguments-intercept":0,"cekForceCost-exBudgetMemory":100,"blake2b-cpu-arguments-intercept":2477736,"remainderInteger-cpu-arguments-constant":148000,"tailList-cpu-arguments":150000,"encodeUtf8-cpu-arguments-intercept":150000,"equalsString-cpu-arguments-slope":1000,"lessThanByteString-memory-arguments":1,"multiplyInteger-cpu-arguments-slope":11218,"appendByteString-cpu-arguments-intercept":396231,"lessThanEqualsByteString-cpu-arguments-slope":248,"modInteger-memory-arguments-slope":1,"addInteger-cpu-arguments-slope":0,"equalsData-cpu-arguments-slope":10000,"decodeUtf8-memory-arguments-intercept":0,"chooseList-cpu-arguments":150000,"constrData-cpu-arguments":150000,"equalsByteString-memory-arguments":1,"cekApplyCost-exBudgetCPU":29773,"quotientInteger-memory-arguments-slope":1,"verifySignature-cpu-arguments-intercept":3345831,"unMapData-memory-arguments":32,"mkCons-memory-arguments":32,"sliceByteString-memory-arguments-slope":1,"sha3_256-memory-arguments":4,"ifThenElse-memory-arguments":1,"mkNilPairData-memory-arguments":32,"equalsByteString-cpu-arguments-slope":247,"appendString-cpu-arguments-intercept":150000,"quotientInteger-cpu-arguments-model-arguments-slope":118,"cekApplyCost-exBudgetMemory":100,"equalsString-memory-arguments":1,"multiplyInteger-memory-arguments-slope":1,"cekBuiltinCost-exBudgetMemory":100,"remainderInteger-memory-arguments-intercept":0,"sha2_256-cpu-arguments-intercept":2477736,"remainderInteger-cpu-arguments-model-arguments-intercept":425507,"lessThanEqualsByteString-memory-arguments":1,"tailList-memory-arguments":32,"mkNilData-cpu-arguments":150000,"chooseData-cpu-arguments":150000,"unBData-memory-arguments":32,"blake2b-memory-arguments":4,"iData-memory-arguments":32,"NoneList-memory-arguments":32,"cekDelayCost-exBudgetCPU":29773,"subtractInteger-memory-arguments-intercept":1,"lessThanByteString-cpu-arguments-intercept":103599,"consByteString-cpu-arguments-slope":1000,"appendByteString-memory-arguments-slope":1,"trace-memory-arguments":32,"divideInteger-cpu-arguments-constant":148000,"cekConstCost-exBudgetCPU":29773,"encodeUtf8-memory-arguments-slope":8,"quotientInteger-cpu-arguments-model-arguments-intercept":425507,"mapData-memory-arguments":32,"appendString-cpu-arguments-slope":1000,"modInteger-cpu-arguments-constant":148000,"verifySignature-cpu-arguments-slope":1,"unConstrData-memory-arguments":32,"quotientInteger-memory-arguments-intercept":0,"equalsByteString-cpu-arguments-constant":150000,"sliceByteString-memory-arguments-intercept":0,"mkPairData-memory-arguments":32,"equalsByteString-cpu-arguments-intercept":112536,"appendString-memory-arguments-slope":1,"lessThanInteger-cpu-arguments-slope":497,"modInteger-cpu-arguments-model-arguments-intercept":425507,"modInteger-memory-arguments-minimum":1,"sha3_256-cpu-arguments-intercept":0,"verifySignature-memory-arguments":1,"cekLamCost-exBudgetMemory":100,"sliceByteString-cpu-arguments-intercept":150000}}}',
        }
    ]


@pytest.fixture(scope="session")
def fake_genesis_parameters(
    cli_alonzo_genesis_json,
    cli_byron_genesis_json,
    cli_conway_genesis_json,
    cli_shelley_genesis_json,
):
    return GenesisParameters(
        alonzo_genesis=cli_alonzo_genesis_json,
        byron_genesis=cli_byron_genesis_json,
        conway_genesis=cli_conway_genesis_json,
        shelley_genesis=cli_shelley_genesis_json,
        active_slots_coefficient=0.05,
        update_quorum=5,
        max_lovelace_supply=45000000000000000,
        network_magic=764824073,
        epoch_length=432000,
        system_start=1506203091,
        slots_per_kes_period=129600,
        slot_length=1,
        max_kes_evolutions=62,
        security_param=2160,
    )


@pytest.fixture(scope="session")
def fake_genesis_parameters_json(
    cli_alonzo_genesis_json,
    cli_byron_genesis_json,
    cli_conway_genesis_json,
    cli_shelley_genesis_json,
):
    return {
        "alonzo_genesis": cli_alonzo_genesis_json,
        "byron_genesis": cli_byron_genesis_json,
        "conway_genesis": cli_conway_genesis_json,
        "shelley_genesis": cli_shelley_genesis_json,
        "active_slots_coefficient": 0.05,
        "update_quorum": 5,
        "max_lovelace_supply": 45000000000000000,
        "network_magic": 764824073,
        "epoch_length": 432000,
        "system_start": 1506203091,
        "slots_per_kes_period": 129600,
        "slot_length": 1,
        "max_kes_evolutions": 62,
        "security_param": 2160,
    }


@pytest.fixture()
def blockfrost_protocol_parameters():
    return {
        "epoch": 507,
        "min_fee_a": 44,
        "min_fee_b": 155381,
        "max_block_size": 90112,
        "max_tx_size": 16384,
        "max_block_header_size": 1100,
        "key_deposit": "2000000",
        "pool_deposit": "500000000",
        "e_max": 18,
        "n_opt": 500,
        "a0": 0.3,
        "rho": 0.003,
        "tau": 0.2,
        "decentralisation_param": 0,
        "extra_entropy": None,
        "protocol_major_ver": 9,
        "protocol_minor_ver": 0,
        "min_utxo": "4310",
        "min_pool_cost": "170000000",
        "nonce": "1556b02efe433eefb439572d1794865e6e116de46d16dbfe2ce037bbbbc66f48",
        "cost_models": {
            "PlutusV1": {
                "addInteger-cpu-arguments-intercept": 100788,
                "addInteger-cpu-arguments-slope": 420,
                "addInteger-memory-arguments-intercept": 1,
                "addInteger-memory-arguments-slope": 1,
                "appendByteString-cpu-arguments-intercept": 1000,
                "appendByteString-cpu-arguments-slope": 173,
                "appendByteString-memory-arguments-intercept": 0,
                "appendByteString-memory-arguments-slope": 1,
                "appendString-cpu-arguments-intercept": 1000,
                "appendString-cpu-arguments-slope": 59957,
                "appendString-memory-arguments-intercept": 4,
                "appendString-memory-arguments-slope": 1,
                "bData-cpu-arguments": 11183,
                "bData-memory-arguments": 32,
                "blake2b_256-cpu-arguments-intercept": 201305,
                "blake2b_256-cpu-arguments-slope": 8356,
                "blake2b_256-memory-arguments": 4,
                "cekApplyCost-exBudgetCPU": 16000,
                "cekApplyCost-exBudgetMemory": 100,
                "cekBuiltinCost-exBudgetCPU": 16000,
                "cekBuiltinCost-exBudgetMemory": 100,
                "cekConstCost-exBudgetCPU": 16000,
                "cekConstCost-exBudgetMemory": 100,
                "cekDelayCost-exBudgetCPU": 16000,
                "cekDelayCost-exBudgetMemory": 100,
                "cekForceCost-exBudgetCPU": 16000,
                "cekForceCost-exBudgetMemory": 100,
                "cekLamCost-exBudgetCPU": 16000,
                "cekLamCost-exBudgetMemory": 100,
                "cekStartupCost-exBudgetCPU": 100,
                "cekStartupCost-exBudgetMemory": 100,
                "cekVarCost-exBudgetCPU": 16000,
                "cekVarCost-exBudgetMemory": 100,
                "chooseData-cpu-arguments": 94375,
                "chooseData-memory-arguments": 32,
                "chooseList-cpu-arguments": 132994,
                "chooseList-memory-arguments": 32,
                "chooseUnit-cpu-arguments": 61462,
                "chooseUnit-memory-arguments": 4,
                "consByteString-cpu-arguments-intercept": 72010,
                "consByteString-cpu-arguments-slope": 178,
                "consByteString-memory-arguments-intercept": 0,
                "consByteString-memory-arguments-slope": 1,
                "constrData-cpu-arguments": 22151,
                "constrData-memory-arguments": 32,
                "decodeUtf8-cpu-arguments-intercept": 91189,
                "decodeUtf8-cpu-arguments-slope": 769,
                "decodeUtf8-memory-arguments-intercept": 4,
                "decodeUtf8-memory-arguments-slope": 2,
                "divideInteger-cpu-arguments-constant": 85848,
                "divideInteger-cpu-arguments-model-arguments-intercept": 228465,
                "divideInteger-cpu-arguments-model-arguments-slope": 122,
                "divideInteger-memory-arguments-intercept": 0,
                "divideInteger-memory-arguments-minimum": 1,
                "divideInteger-memory-arguments-slope": 1,
                "encodeUtf8-cpu-arguments-intercept": 1000,
                "encodeUtf8-cpu-arguments-slope": 42921,
                "encodeUtf8-memory-arguments-intercept": 4,
                "encodeUtf8-memory-arguments-slope": 2,
                "equalsByteString-cpu-arguments-constant": 24548,
                "equalsByteString-cpu-arguments-intercept": 29498,
                "equalsByteString-cpu-arguments-slope": 38,
                "equalsByteString-memory-arguments": 1,
                "equalsData-cpu-arguments-intercept": 898148,
                "equalsData-cpu-arguments-slope": 27279,
                "equalsData-memory-arguments": 1,
                "equalsInteger-cpu-arguments-intercept": 51775,
                "equalsInteger-cpu-arguments-slope": 558,
                "equalsInteger-memory-arguments": 1,
                "equalsString-cpu-arguments-constant": 39184,
                "equalsString-cpu-arguments-intercept": 1000,
                "equalsString-cpu-arguments-slope": 60594,
                "equalsString-memory-arguments": 1,
                "fstPair-cpu-arguments": 141895,
                "fstPair-memory-arguments": 32,
                "headList-cpu-arguments": 83150,
                "headList-memory-arguments": 32,
                "iData-cpu-arguments": 15299,
                "iData-memory-arguments": 32,
                "ifThenElse-cpu-arguments": 76049,
                "ifThenElse-memory-arguments": 1,
                "indexByteString-cpu-arguments": 13169,
                "indexByteString-memory-arguments": 4,
                "lengthOfByteString-cpu-arguments": 22100,
                "lengthOfByteString-memory-arguments": 10,
                "lessThanByteString-cpu-arguments-intercept": 28999,
                "lessThanByteString-cpu-arguments-slope": 74,
                "lessThanByteString-memory-arguments": 1,
                "lessThanEqualsByteString-cpu-arguments-intercept": 28999,
                "lessThanEqualsByteString-cpu-arguments-slope": 74,
                "lessThanEqualsByteString-memory-arguments": 1,
                "lessThanEqualsInteger-cpu-arguments-intercept": 43285,
                "lessThanEqualsInteger-cpu-arguments-slope": 552,
                "lessThanEqualsInteger-memory-arguments": 1,
                "lessThanInteger-cpu-arguments-intercept": 44749,
                "lessThanInteger-cpu-arguments-slope": 541,
                "lessThanInteger-memory-arguments": 1,
                "listData-cpu-arguments": 33852,
                "listData-memory-arguments": 32,
                "mapData-cpu-arguments": 68246,
                "mapData-memory-arguments": 32,
                "mkCons-cpu-arguments": 72362,
                "mkCons-memory-arguments": 32,
                "mkNilData-cpu-arguments": 7243,
                "mkNilData-memory-arguments": 32,
                "mkNilPairData-cpu-arguments": 7391,
                "mkNilPairData-memory-arguments": 32,
                "mkPairData-cpu-arguments": 11546,
                "mkPairData-memory-arguments": 32,
                "modInteger-cpu-arguments-constant": 85848,
                "modInteger-cpu-arguments-model-arguments-intercept": 228465,
                "modInteger-cpu-arguments-model-arguments-slope": 122,
                "modInteger-memory-arguments-intercept": 0,
                "modInteger-memory-arguments-minimum": 1,
                "modInteger-memory-arguments-slope": 1,
                "multiplyInteger-cpu-arguments-intercept": 90434,
                "multiplyInteger-cpu-arguments-slope": 519,
                "multiplyInteger-memory-arguments-intercept": 0,
                "multiplyInteger-memory-arguments-slope": 1,
                "NoneList-cpu-arguments": 74433,
                "NoneList-memory-arguments": 32,
                "quotientInteger-cpu-arguments-constant": 85848,
                "quotientInteger-cpu-arguments-model-arguments-intercept": 228465,
                "quotientInteger-cpu-arguments-model-arguments-slope": 122,
                "quotientInteger-memory-arguments-intercept": 0,
                "quotientInteger-memory-arguments-minimum": 1,
                "quotientInteger-memory-arguments-slope": 1,
                "remainderInteger-cpu-arguments-constant": 85848,
                "remainderInteger-cpu-arguments-model-arguments-intercept": 228465,
                "remainderInteger-cpu-arguments-model-arguments-slope": 122,
                "remainderInteger-memory-arguments-intercept": 0,
                "remainderInteger-memory-arguments-minimum": 1,
                "remainderInteger-memory-arguments-slope": 1,
                "sha2_256-cpu-arguments-intercept": 270652,
                "sha2_256-cpu-arguments-slope": 22588,
                "sha2_256-memory-arguments": 4,
                "sha3_256-cpu-arguments-intercept": 1457325,
                "sha3_256-cpu-arguments-slope": 64566,
                "sha3_256-memory-arguments": 4,
                "sliceByteString-cpu-arguments-intercept": 20467,
                "sliceByteString-cpu-arguments-slope": 1,
                "sliceByteString-memory-arguments-intercept": 4,
                "sliceByteString-memory-arguments-slope": 0,
                "sndPair-cpu-arguments": 141992,
                "sndPair-memory-arguments": 32,
                "subtractInteger-cpu-arguments-intercept": 100788,
                "subtractInteger-cpu-arguments-slope": 420,
                "subtractInteger-memory-arguments-intercept": 1,
                "subtractInteger-memory-arguments-slope": 1,
                "tailList-cpu-arguments": 81663,
                "tailList-memory-arguments": 32,
                "trace-cpu-arguments": 59498,
                "trace-memory-arguments": 32,
                "unBData-cpu-arguments": 20142,
                "unBData-memory-arguments": 32,
                "unConstrData-cpu-arguments": 24588,
                "unConstrData-memory-arguments": 32,
                "unIData-cpu-arguments": 20744,
                "unIData-memory-arguments": 32,
                "unListData-cpu-arguments": 25933,
                "unListData-memory-arguments": 32,
                "unMapData-cpu-arguments": 24623,
                "unMapData-memory-arguments": 32,
                "verifyEd25519Signature-cpu-arguments-intercept": 53384111,
                "verifyEd25519Signature-cpu-arguments-slope": 14333,
                "verifyEd25519Signature-memory-arguments": 10,
            },
            "PlutusV2": {
                "addInteger-cpu-arguments-intercept": 100788,
                "addInteger-cpu-arguments-slope": 420,
                "addInteger-memory-arguments-intercept": 1,
                "addInteger-memory-arguments-slope": 1,
                "appendByteString-cpu-arguments-intercept": 1000,
                "appendByteString-cpu-arguments-slope": 173,
                "appendByteString-memory-arguments-intercept": 0,
                "appendByteString-memory-arguments-slope": 1,
                "appendString-cpu-arguments-intercept": 1000,
                "appendString-cpu-arguments-slope": 59957,
                "appendString-memory-arguments-intercept": 4,
                "appendString-memory-arguments-slope": 1,
                "bData-cpu-arguments": 11183,
                "bData-memory-arguments": 32,
                "blake2b_256-cpu-arguments-intercept": 201305,
                "blake2b_256-cpu-arguments-slope": 8356,
                "blake2b_256-memory-arguments": 4,
                "cekApplyCost-exBudgetCPU": 16000,
                "cekApplyCost-exBudgetMemory": 100,
                "cekBuiltinCost-exBudgetCPU": 16000,
                "cekBuiltinCost-exBudgetMemory": 100,
                "cekConstCost-exBudgetCPU": 16000,
                "cekConstCost-exBudgetMemory": 100,
                "cekDelayCost-exBudgetCPU": 16000,
                "cekDelayCost-exBudgetMemory": 100,
                "cekForceCost-exBudgetCPU": 16000,
                "cekForceCost-exBudgetMemory": 100,
                "cekLamCost-exBudgetCPU": 16000,
                "cekLamCost-exBudgetMemory": 100,
                "cekStartupCost-exBudgetCPU": 100,
                "cekStartupCost-exBudgetMemory": 100,
                "cekVarCost-exBudgetCPU": 16000,
                "cekVarCost-exBudgetMemory": 100,
                "chooseData-cpu-arguments": 94375,
                "chooseData-memory-arguments": 32,
                "chooseList-cpu-arguments": 132994,
                "chooseList-memory-arguments": 32,
                "chooseUnit-cpu-arguments": 61462,
                "chooseUnit-memory-arguments": 4,
                "consByteString-cpu-arguments-intercept": 72010,
                "consByteString-cpu-arguments-slope": 178,
                "consByteString-memory-arguments-intercept": 0,
                "consByteString-memory-arguments-slope": 1,
                "constrData-cpu-arguments": 22151,
                "constrData-memory-arguments": 32,
                "decodeUtf8-cpu-arguments-intercept": 91189,
                "decodeUtf8-cpu-arguments-slope": 769,
                "decodeUtf8-memory-arguments-intercept": 4,
                "decodeUtf8-memory-arguments-slope": 2,
                "divideInteger-cpu-arguments-constant": 85848,
                "divideInteger-cpu-arguments-model-arguments-intercept": 228465,
                "divideInteger-cpu-arguments-model-arguments-slope": 122,
                "divideInteger-memory-arguments-intercept": 0,
                "divideInteger-memory-arguments-minimum": 1,
                "divideInteger-memory-arguments-slope": 1,
                "encodeUtf8-cpu-arguments-intercept": 1000,
                "encodeUtf8-cpu-arguments-slope": 42921,
                "encodeUtf8-memory-arguments-intercept": 4,
                "encodeUtf8-memory-arguments-slope": 2,
                "equalsByteString-cpu-arguments-constant": 24548,
                "equalsByteString-cpu-arguments-intercept": 29498,
                "equalsByteString-cpu-arguments-slope": 38,
                "equalsByteString-memory-arguments": 1,
                "equalsData-cpu-arguments-intercept": 898148,
                "equalsData-cpu-arguments-slope": 27279,
                "equalsData-memory-arguments": 1,
                "equalsInteger-cpu-arguments-intercept": 51775,
                "equalsInteger-cpu-arguments-slope": 558,
                "equalsInteger-memory-arguments": 1,
                "equalsString-cpu-arguments-constant": 39184,
                "equalsString-cpu-arguments-intercept": 1000,
                "equalsString-cpu-arguments-slope": 60594,
                "equalsString-memory-arguments": 1,
                "fstPair-cpu-arguments": 141895,
                "fstPair-memory-arguments": 32,
                "headList-cpu-arguments": 83150,
                "headList-memory-arguments": 32,
                "iData-cpu-arguments": 15299,
                "iData-memory-arguments": 32,
                "ifThenElse-cpu-arguments": 76049,
                "ifThenElse-memory-arguments": 1,
                "indexByteString-cpu-arguments": 13169,
                "indexByteString-memory-arguments": 4,
                "lengthOfByteString-cpu-arguments": 22100,
                "lengthOfByteString-memory-arguments": 10,
                "lessThanByteString-cpu-arguments-intercept": 28999,
                "lessThanByteString-cpu-arguments-slope": 74,
                "lessThanByteString-memory-arguments": 1,
                "lessThanEqualsByteString-cpu-arguments-intercept": 28999,
                "lessThanEqualsByteString-cpu-arguments-slope": 74,
                "lessThanEqualsByteString-memory-arguments": 1,
                "lessThanEqualsInteger-cpu-arguments-intercept": 43285,
                "lessThanEqualsInteger-cpu-arguments-slope": 552,
                "lessThanEqualsInteger-memory-arguments": 1,
                "lessThanInteger-cpu-arguments-intercept": 44749,
                "lessThanInteger-cpu-arguments-slope": 541,
                "lessThanInteger-memory-arguments": 1,
                "listData-cpu-arguments": 33852,
                "listData-memory-arguments": 32,
                "mapData-cpu-arguments": 68246,
                "mapData-memory-arguments": 32,
                "mkCons-cpu-arguments": 72362,
                "mkCons-memory-arguments": 32,
                "mkNilData-cpu-arguments": 7243,
                "mkNilData-memory-arguments": 32,
                "mkNilPairData-cpu-arguments": 7391,
                "mkNilPairData-memory-arguments": 32,
                "mkPairData-cpu-arguments": 11546,
                "mkPairData-memory-arguments": 32,
                "modInteger-cpu-arguments-constant": 85848,
                "modInteger-cpu-arguments-model-arguments-intercept": 228465,
                "modInteger-cpu-arguments-model-arguments-slope": 122,
                "modInteger-memory-arguments-intercept": 0,
                "modInteger-memory-arguments-minimum": 1,
                "modInteger-memory-arguments-slope": 1,
                "multiplyInteger-cpu-arguments-intercept": 90434,
                "multiplyInteger-cpu-arguments-slope": 519,
                "multiplyInteger-memory-arguments-intercept": 0,
                "multiplyInteger-memory-arguments-slope": 1,
                "NoneList-cpu-arguments": 74433,
                "NoneList-memory-arguments": 32,
                "quotientInteger-cpu-arguments-constant": 85848,
                "quotientInteger-cpu-arguments-model-arguments-intercept": 228465,
                "quotientInteger-cpu-arguments-model-arguments-slope": 122,
                "quotientInteger-memory-arguments-intercept": 0,
                "quotientInteger-memory-arguments-minimum": 1,
                "quotientInteger-memory-arguments-slope": 1,
                "remainderInteger-cpu-arguments-constant": 85848,
                "remainderInteger-cpu-arguments-model-arguments-intercept": 228465,
                "remainderInteger-cpu-arguments-model-arguments-slope": 122,
                "remainderInteger-memory-arguments-intercept": 0,
                "remainderInteger-memory-arguments-minimum": 1,
                "remainderInteger-memory-arguments-slope": 1,
                "serialiseData-cpu-arguments-intercept": 955506,
                "serialiseData-cpu-arguments-slope": 213312,
                "serialiseData-memory-arguments-intercept": 0,
                "serialiseData-memory-arguments-slope": 2,
                "sha2_256-cpu-arguments-intercept": 270652,
                "sha2_256-cpu-arguments-slope": 22588,
                "sha2_256-memory-arguments": 4,
                "sha3_256-cpu-arguments-intercept": 1457325,
                "sha3_256-cpu-arguments-slope": 64566,
                "sha3_256-memory-arguments": 4,
                "sliceByteString-cpu-arguments-intercept": 20467,
                "sliceByteString-cpu-arguments-slope": 1,
                "sliceByteString-memory-arguments-intercept": 4,
                "sliceByteString-memory-arguments-slope": 0,
                "sndPair-cpu-arguments": 141992,
                "sndPair-memory-arguments": 32,
                "subtractInteger-cpu-arguments-intercept": 100788,
                "subtractInteger-cpu-arguments-slope": 420,
                "subtractInteger-memory-arguments-intercept": 1,
                "subtractInteger-memory-arguments-slope": 1,
                "tailList-cpu-arguments": 81663,
                "tailList-memory-arguments": 32,
                "trace-cpu-arguments": 59498,
                "trace-memory-arguments": 32,
                "unBData-cpu-arguments": 20142,
                "unBData-memory-arguments": 32,
                "unConstrData-cpu-arguments": 24588,
                "unConstrData-memory-arguments": 32,
                "unIData-cpu-arguments": 20744,
                "unIData-memory-arguments": 32,
                "unListData-cpu-arguments": 25933,
                "unListData-memory-arguments": 32,
                "unMapData-cpu-arguments": 24623,
                "unMapData-memory-arguments": 32,
                "verifyEcdsaSecp256k1Signature-cpu-arguments": 43053543,
                "verifyEcdsaSecp256k1Signature-memory-arguments": 10,
                "verifyEd25519Signature-cpu-arguments-intercept": 53384111,
                "verifyEd25519Signature-cpu-arguments-slope": 14333,
                "verifyEd25519Signature-memory-arguments": 10,
                "verifySchnorrSecp256k1Signature-cpu-arguments-intercept": 43574283,
                "verifySchnorrSecp256k1Signature-cpu-arguments-slope": 26308,
                "verifySchnorrSecp256k1Signature-memory-arguments": 10,
            },
            "PlutusV3": {
                "addInteger-cpu-arguments-intercept": 100788,
                "addInteger-cpu-arguments-slope": 420,
                "addInteger-memory-arguments-intercept": 1,
                "addInteger-memory-arguments-slope": 1,
                "appendByteString-cpu-arguments-intercept": 1000,
                "appendByteString-cpu-arguments-slope": 173,
                "appendByteString-memory-arguments-intercept": 0,
                "appendByteString-memory-arguments-slope": 1,
                "appendString-cpu-arguments-intercept": 1000,
                "appendString-cpu-arguments-slope": 59957,
                "appendString-memory-arguments-intercept": 4,
                "appendString-memory-arguments-slope": 1,
                "bData-cpu-arguments": 11183,
                "bData-memory-arguments": 32,
                "blake2b_256-cpu-arguments-intercept": 201305,
                "blake2b_256-cpu-arguments-slope": 8356,
                "blake2b_256-memory-arguments": 4,
                "cekApplyCost-exBudgetCPU": 16000,
                "cekApplyCost-exBudgetMemory": 100,
                "cekBuiltinCost-exBudgetCPU": 16000,
                "cekBuiltinCost-exBudgetMemory": 100,
                "cekConstCost-exBudgetCPU": 16000,
                "cekConstCost-exBudgetMemory": 100,
                "cekDelayCost-exBudgetCPU": 16000,
                "cekDelayCost-exBudgetMemory": 100,
                "cekForceCost-exBudgetCPU": 16000,
                "cekForceCost-exBudgetMemory": 100,
                "cekLamCost-exBudgetCPU": 16000,
                "cekLamCost-exBudgetMemory": 100,
                "cekStartupCost-exBudgetCPU": 100,
                "cekStartupCost-exBudgetMemory": 100,
                "cekVarCost-exBudgetCPU": 16000,
                "cekVarCost-exBudgetMemory": 100,
                "chooseData-cpu-arguments": 94375,
                "chooseData-memory-arguments": 32,
                "chooseList-cpu-arguments": 132994,
                "chooseList-memory-arguments": 32,
                "chooseUnit-cpu-arguments": 61462,
                "chooseUnit-memory-arguments": 4,
                "consByteString-cpu-arguments-intercept": 72010,
                "consByteString-cpu-arguments-slope": 178,
                "consByteString-memory-arguments-intercept": 0,
                "consByteString-memory-arguments-slope": 1,
                "constrData-cpu-arguments": 22151,
                "constrData-memory-arguments": 32,
                "decodeUtf8-cpu-arguments-intercept": 91189,
                "decodeUtf8-cpu-arguments-slope": 769,
                "decodeUtf8-memory-arguments-intercept": 4,
                "decodeUtf8-memory-arguments-slope": 2,
                "divideInteger-cpu-arguments-constant": 85848,
                "divideInteger-cpu-arguments-model-arguments-c00": 123203,
                "divideInteger-cpu-arguments-model-arguments-c01": 7305,
                "divideInteger-cpu-arguments-model-arguments-c02": -900,
                "divideInteger-cpu-arguments-model-arguments-c10": 1716,
                "divideInteger-cpu-arguments-model-arguments-c11": 549,
                "divideInteger-cpu-arguments-model-arguments-c20": 57,
                "divideInteger-cpu-arguments-model-arguments-minimum": 85848,
                "divideInteger-memory-arguments-intercept": 0,
                "divideInteger-memory-arguments-minimum": 1,
                "divideInteger-memory-arguments-slope": 1,
                "encodeUtf8-cpu-arguments-intercept": 1000,
                "encodeUtf8-cpu-arguments-slope": 42921,
                "encodeUtf8-memory-arguments-intercept": 4,
                "encodeUtf8-memory-arguments-slope": 2,
                "equalsByteString-cpu-arguments-constant": 24548,
                "equalsByteString-cpu-arguments-intercept": 29498,
                "equalsByteString-cpu-arguments-slope": 38,
                "equalsByteString-memory-arguments": 1,
                "equalsData-cpu-arguments-intercept": 898148,
                "equalsData-cpu-arguments-slope": 27279,
                "equalsData-memory-arguments": 1,
                "equalsInteger-cpu-arguments-intercept": 51775,
                "equalsInteger-cpu-arguments-slope": 558,
                "equalsInteger-memory-arguments": 1,
                "equalsString-cpu-arguments-constant": 39184,
                "equalsString-cpu-arguments-intercept": 1000,
                "equalsString-cpu-arguments-slope": 60594,
                "equalsString-memory-arguments": 1,
                "fstPair-cpu-arguments": 141895,
                "fstPair-memory-arguments": 32,
                "headList-cpu-arguments": 83150,
                "headList-memory-arguments": 32,
                "iData-cpu-arguments": 15299,
                "iData-memory-arguments": 32,
                "ifThenElse-cpu-arguments": 76049,
                "ifThenElse-memory-arguments": 1,
                "indexByteString-cpu-arguments": 13169,
                "indexByteString-memory-arguments": 4,
                "lengthOfByteString-cpu-arguments": 22100,
                "lengthOfByteString-memory-arguments": 10,
                "lessThanByteString-cpu-arguments-intercept": 28999,
                "lessThanByteString-cpu-arguments-slope": 74,
                "lessThanByteString-memory-arguments": 1,
                "lessThanEqualsByteString-cpu-arguments-intercept": 28999,
                "lessThanEqualsByteString-cpu-arguments-slope": 74,
                "lessThanEqualsByteString-memory-arguments": 1,
                "lessThanEqualsInteger-cpu-arguments-intercept": 43285,
                "lessThanEqualsInteger-cpu-arguments-slope": 552,
                "lessThanEqualsInteger-memory-arguments": 1,
                "lessThanInteger-cpu-arguments-intercept": 44749,
                "lessThanInteger-cpu-arguments-slope": 541,
                "lessThanInteger-memory-arguments": 1,
                "listData-cpu-arguments": 33852,
                "listData-memory-arguments": 32,
                "mapData-cpu-arguments": 68246,
                "mapData-memory-arguments": 32,
                "mkCons-cpu-arguments": 72362,
                "mkCons-memory-arguments": 32,
                "mkNilData-cpu-arguments": 7243,
                "mkNilData-memory-arguments": 32,
                "mkNilPairData-cpu-arguments": 7391,
                "mkNilPairData-memory-arguments": 32,
                "mkPairData-cpu-arguments": 11546,
                "mkPairData-memory-arguments": 32,
                "modInteger-cpu-arguments-constant": 85848,
                "modInteger-cpu-arguments-model-arguments-c00": 123203,
                "modInteger-cpu-arguments-model-arguments-c01": 7305,
                "modInteger-cpu-arguments-model-arguments-c02": -900,
                "modInteger-cpu-arguments-model-arguments-c10": 1716,
                "modInteger-cpu-arguments-model-arguments-c11": 549,
                "modInteger-cpu-arguments-model-arguments-c20": 57,
                "modInteger-cpu-arguments-model-arguments-minimum": 85848,
                "modInteger-memory-arguments-intercept": 0,
                "modInteger-memory-arguments-slope": 1,
                "multiplyInteger-cpu-arguments-intercept": 90434,
                "multiplyInteger-cpu-arguments-slope": 519,
                "multiplyInteger-memory-arguments-intercept": 0,
                "multiplyInteger-memory-arguments-slope": 1,
                "NoneList-cpu-arguments": 74433,
                "NoneList-memory-arguments": 32,
                "quotientInteger-cpu-arguments-constant": 85848,
                "quotientInteger-cpu-arguments-model-arguments-c00": 123203,
                "quotientInteger-cpu-arguments-model-arguments-c01": 7305,
                "quotientInteger-cpu-arguments-model-arguments-c02": -900,
                "quotientInteger-cpu-arguments-model-arguments-c10": 1716,
                "quotientInteger-cpu-arguments-model-arguments-c11": 549,
                "quotientInteger-cpu-arguments-model-arguments-c20": 57,
                "quotientInteger-cpu-arguments-model-arguments-minimum": 85848,
                "quotientInteger-memory-arguments-intercept": 0,
                "quotientInteger-memory-arguments-slope": 1,
                "remainderInteger-cpu-arguments-constant": 1,
                "remainderInteger-cpu-arguments-model-arguments-c00": 85848,
                "remainderInteger-cpu-arguments-model-arguments-c01": 123203,
                "remainderInteger-cpu-arguments-model-arguments-c02": 7305,
                "remainderInteger-cpu-arguments-model-arguments-c10": -900,
                "remainderInteger-cpu-arguments-model-arguments-c11": 1716,
                "remainderInteger-cpu-arguments-model-arguments-c20": 549,
                "remainderInteger-cpu-arguments-model-arguments-minimum": 57,
                "remainderInteger-memory-arguments-intercept": 85848,
                "remainderInteger-memory-arguments-minimum": 0,
                "remainderInteger-memory-arguments-slope": 1,
                "serialiseData-cpu-arguments-intercept": 955506,
                "serialiseData-cpu-arguments-slope": 213312,
                "serialiseData-memory-arguments-intercept": 0,
                "serialiseData-memory-arguments-slope": 2,
                "sha2_256-cpu-arguments-intercept": 270652,
                "sha2_256-cpu-arguments-slope": 22588,
                "sha2_256-memory-arguments": 4,
                "sha3_256-cpu-arguments-intercept": 1457325,
                "sha3_256-cpu-arguments-slope": 64566,
                "sha3_256-memory-arguments": 4,
                "sliceByteString-cpu-arguments-intercept": 20467,
                "sliceByteString-cpu-arguments-slope": 1,
                "sliceByteString-memory-arguments-intercept": 4,
                "sliceByteString-memory-arguments-slope": 0,
                "sndPair-cpu-arguments": 141992,
                "sndPair-memory-arguments": 32,
                "subtractInteger-cpu-arguments-intercept": 100788,
                "subtractInteger-cpu-arguments-slope": 420,
                "subtractInteger-memory-arguments-intercept": 1,
                "subtractInteger-memory-arguments-slope": 1,
                "tailList-cpu-arguments": 81663,
                "tailList-memory-arguments": 32,
                "trace-cpu-arguments": 59498,
                "trace-memory-arguments": 32,
                "unBData-cpu-arguments": 20142,
                "unBData-memory-arguments": 32,
                "unConstrData-cpu-arguments": 24588,
                "unConstrData-memory-arguments": 32,
                "unIData-cpu-arguments": 20744,
                "unIData-memory-arguments": 32,
                "unListData-cpu-arguments": 25933,
                "unListData-memory-arguments": 32,
                "unMapData-cpu-arguments": 24623,
                "unMapData-memory-arguments": 32,
                "verifyEcdsaSecp256k1Signature-cpu-arguments": 43053543,
                "verifyEcdsaSecp256k1Signature-memory-arguments": 10,
                "verifyEd25519Signature-cpu-arguments-intercept": 53384111,
                "verifyEd25519Signature-cpu-arguments-slope": 14333,
                "verifyEd25519Signature-memory-arguments": 10,
                "verifySchnorrSecp256k1Signature-cpu-arguments-intercept": 43574283,
                "verifySchnorrSecp256k1Signature-cpu-arguments-slope": 26308,
                "verifySchnorrSecp256k1Signature-memory-arguments": 10,
                "cekConstrCost-exBudgetCPU": 16000,
                "cekConstrCost-exBudgetMemory": 100,
                "cekCaseCost-exBudgetCPU": 16000,
                "cekCaseCost-exBudgetMemory": 100,
                "bls12_381_G1_add-cpu-arguments": 962335,
                "bls12_381_G1_add-memory-arguments": 18,
                "bls12_381_G1_compress-cpu-arguments": 2780678,
                "bls12_381_G1_compress-memory-arguments": 6,
                "bls12_381_G1_equal-cpu-arguments": 442008,
                "bls12_381_G1_equal-memory-arguments": 1,
                "bls12_381_G1_hashToGroup-cpu-arguments-intercept": 52538055,
                "bls12_381_G1_hashToGroup-cpu-arguments-slope": 3756,
                "bls12_381_G1_hashToGroup-memory-arguments": 18,
                "bls12_381_G1_neg-cpu-arguments": 267929,
                "bls12_381_G1_neg-memory-arguments": 18,
                "bls12_381_G1_scalarMul-cpu-arguments-intercept": 76433006,
                "bls12_381_G1_scalarMul-cpu-arguments-slope": 8868,
                "bls12_381_G1_scalarMul-memory-arguments": 18,
                "bls12_381_G1_uncompress-cpu-arguments": 52948122,
                "bls12_381_G1_uncompress-memory-arguments": 18,
                "bls12_381_G2_add-cpu-arguments": 1995836,
                "bls12_381_G2_add-memory-arguments": 36,
                "bls12_381_G2_compress-cpu-arguments": 3227919,
                "bls12_381_G2_compress-memory-arguments": 12,
                "bls12_381_G2_equal-cpu-arguments": 901022,
                "bls12_381_G2_equal-memory-arguments": 1,
                "bls12_381_G2_hashToGroup-cpu-arguments-intercept": 166917843,
                "bls12_381_G2_hashToGroup-cpu-arguments-slope": 4307,
                "bls12_381_G2_hashToGroup-memory-arguments": 36,
                "bls12_381_G2_neg-cpu-arguments": 284546,
                "bls12_381_G2_neg-memory-arguments": 36,
                "bls12_381_G2_scalarMul-cpu-arguments-intercept": 158221314,
                "bls12_381_G2_scalarMul-cpu-arguments-slope": 26549,
                "bls12_381_G2_scalarMul-memory-arguments": 36,
                "bls12_381_G2_uncompress-cpu-arguments": 74698472,
                "bls12_381_G2_uncompress-memory-arguments": 36,
                "bls12_381_finalVerify-cpu-arguments": 333849714,
                "bls12_381_finalVerify-memory-arguments": 1,
                "bls12_381_millerLoop-cpu-arguments": 254006273,
                "bls12_381_millerLoop-memory-arguments": 72,
                "bls12_381_mulMlResult-cpu-arguments": 2174038,
                "bls12_381_mulMlResult-memory-arguments": 72,
                "keccak_256-cpu-arguments-intercept": 2261318,
                "keccak_256-cpu-arguments-slope": 64571,
                "keccak_256-memory-arguments": 4,
                "blake2b_224-cpu-arguments-intercept": 207616,
                "blake2b_224-cpu-arguments-slope": 8310,
                "blake2b_224-memory-arguments": 4,
                "integerToByteString-cpu-arguments-c0": 1293828,
                "integerToByteString-cpu-arguments-c1": 28716,
                "integerToByteString-cpu-arguments-c2": 63,
                "integerToByteString-memory-arguments-intercept": 0,
                "integerToByteString-memory-arguments-slope": 1,
                "byteStringToInteger-cpu-arguments-c0": 1006041,
                "byteStringToInteger-cpu-arguments-c1": 43623,
                "byteStringToInteger-cpu-arguments-c2": 251,
                "byteStringToInteger-memory-arguments-intercept": 0,
                "byteStringToInteger-memory-arguments-slope": 1,
            },
        },
        "price_mem": 0.0577,
        "price_step": 0.0000721,
        "max_tx_ex_mem": "14000000",
        "max_tx_ex_steps": "10000000000",
        "max_block_ex_mem": "62000000",
        "max_block_ex_steps": "20000000000",
        "max_val_size": "5000",
        "collateral_percent": 150,
        "max_collateral_inputs": 3,
        "coins_per_utxo_size": "4310",
        "coins_per_utxo_word": "4310",
        "pvt_motion_no_confidence": 0.51,
        "pvt_committee_normal": 0.51,
        "pvt_committee_no_confidence": 0.51,
        "pvt_hard_fork_initiation": 0.51,
        "dvt_motion_no_confidence": 0.67,
        "dvt_committee_normal": 0.67,
        "dvt_committee_no_confidence": 0.6,
        "dvt_update_to_constitution": 0.75,
        "dvt_hard_fork_initiation": 0.6,
        "dvt_p_p_network_group": 0.67,
        "dvt_p_p_economic_group": 0.67,
        "dvt_p_p_technical_group": 0.67,
        "dvt_p_p_gov_group": 0.75,
        "dvt_treasury_withdrawal": 0.67,
        "committee_min_size": "7",
        "committee_max_term_length": "146",
        "gov_action_lifetime": "6",
        "gov_action_deposit": "100000000000",
        "drep_deposit": "500000000",
        "drep_activity": "20",
        "pvtpp_security_group": 0.51,
        "min_fee_reference_scripts": 15,
    }


@pytest.fixture
def koios_protocol_parameters():
    return [
        {
            "epoch_no": 294,
            "min_fee_a": 44,
            "min_fee_b": 155381,
            "max_block_size": 65536,
            "max_tx_size": 16384,
            "max_bh_size": 1100,
            "key_deposit": 2000000,
            "pool_deposit": 500000000,
            "max_epoch": 18,
            "optimal_pool_count": 500,
            "influence": 0.3,
            "monetary_expand_rate": 0.003,
            "treasury_growth_rate": 0.2,
            "decentralisation": 0.1,
            "extra_entropy": "d982e06fd33e7440b43cefad529b7ecafbaa255e38178ad4189a37e4ce9bf1fa",
            "protocol_major": 5,
            "protocol_minor": 0,
            "min_utxo_value": 34482,
            "min_pool_cost": 340000000,
            "nonce": "01304ddf5613166be96fce27be110747f2c8fcb38776618ee79225ccb59b81e2",
            "block_hash": "f9dc2a2fc3a2db09a71af007a740261de585afc9e3022b8e30535592ff4dd9e5",
            "cost_models": "None",
            "price_mem": 0.0577,
            "price_step": 0.0000721,
            "max_tx_ex_mem": 10000000,
            "max_tx_ex_steps": 10000000000,
            "max_block_ex_mem": 50000000,
            "max_block_ex_steps": 40000000000,
            "max_val_size": 5000,
            "collateral_percent": 150,
            "max_collateral_inputs": 3,
            "coins_per_utxo_size": 34482,
            "pvt_motion_no_confidence": 0.6,
            "pvt_committee_normal": 0.65,
            "pvt_committee_no_confidence": 0.65,
            "pvt_hard_fork_initiation": 0.51,
            "dvt_motion_no_confidence": 0.67,
            "dvt_committee_normal": 0.67,
            "dvt_committee_no_confidence": 0.65,
            "dvt_update_to_constitution": 0.75,
            "dvt_hard_fork_initiation": 0.6,
            "dvt_p_p_network_group": 0.67,
            "dvt_p_p_economic_group": 0.67,
            "dvt_p_p_technical_group": 0.67,
            "dvt_p_p_gov_group": 0.75,
            "dvt_treasury_withdrawal": 0.67,
            "committee_min_size": 5,
            "committee_max_term_length": 146,
            "gov_action_lifetime": 14,
            "gov_action_deposit": 100000000000,
            "drep_deposit": 500000000,
            "drep_activity": 20,
            "pvtpp_security_group": 0.6,
            "min_fee_reference_scripts": 15,
        }
    ]


@pytest.fixture
def ogmios_protocol_parameters():
    return {
        "collateralPercentage": 150,
        "constitutionalCommitteeMaxTermLength": 146,
        "constitutionalCommitteeMinSize": 7,
        "delegateRepresentativeDeposit": {"ada": {"lovelace": 500000000}},
        "delegateRepresentativeMaxIdleTime": 20,
        "delegateRepresentativeVotingThresholds": {
            "constitution": "3/4",
            "constitutionalCommittee": {
                "default": "67/100",
                "stateOfNoConfidence": "3/5",
            },
            "hardForkInitiation": "3/5",
            "noConfidence": "67/100",
            "protocolParametersUpdate": {
                "economic": "67/100",
                "governance": "3/4",
                "network": "67/100",
                "technical": "67/100",
            },
            "treasuryWithdrawals": "67/100",
        },
        "desiredNumberOfStakePools": 500,
        "governanceActionDeposit": {"ada": {"lovelace": 100000000000}},
        "governanceActionLifetime": 6,
        "maxBlockBodySize": {"bytes": 90112},
        "maxBlockHeaderSize": {"bytes": 1100},
        "maxCollateralInputs": 3,
        "maxExecutionUnitsPerBlock": {"cpu": 20000000000, "memory": 62000000},
        "maxExecutionUnitsPerTransaction": {"cpu": 10000000000, "memory": 14000000},
        "maxReferenceScriptsSize": {"bytes": 204800},
        "maxTransactionSize": {"bytes": 16384},
        "maxValueSize": {"bytes": 5000},
        "minFeeCoefficient": 44,
        "minFeeConstant": {"ada": {"lovelace": 155381}},
        "minFeeReferenceScripts": {"base": 15.0, "multiplier": 1.2, "range": 25600},
        "minStakePoolCost": {"ada": {"lovelace": 170000000}},
        "minUtxoDepositCoefficient": 4310,
        "minUtxoDepositConstant": {"ada": {"lovelace": 0}},
        "monetaryExpansion": "3/1000",
        "plutusCostModels": {
            "plutus:v1": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                228465,
                122,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                85848,
                228465,
                122,
                0,
                1,
                1,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                53384111,
                14333,
                10,
            ],
            "plutus:v2": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                228465,
                122,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                85848,
                228465,
                122,
                0,
                1,
                1,
                955506,
                213312,
                0,
                2,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                43053543,
                10,
                53384111,
                14333,
                10,
                43574283,
                26308,
                10,
            ],
            "plutus:v3": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                1,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                955506,
                213312,
                0,
                2,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                43053543,
                10,
                53384111,
                14333,
                10,
                43574283,
                26308,
                10,
                16000,
                100,
                16000,
                100,
                962335,
                18,
                2780678,
                6,
                442008,
                1,
                52538055,
                3756,
                18,
                267929,
                18,
                76433006,
                8868,
                18,
                52948122,
                18,
                1995836,
                36,
                3227919,
                12,
                901022,
                1,
                166917843,
                4307,
                36,
                284546,
                36,
                158221314,
                26549,
                36,
                74698472,
                36,
                333849714,
                1,
                254006273,
                72,
                2174038,
                72,
                2261318,
                64571,
                4,
                207616,
                8310,
                4,
                1293828,
                28716,
                63,
                0,
                1,
                1006041,
                43623,
                251,
                0,
                1,
            ],
        },
        "scriptExecutionPrices": {"cpu": "721/10000000", "memory": "577/10000"},
        "stakeCredentialDeposit": {"ada": {"lovelace": 2000000}},
        "stakePoolDeposit": {"ada": {"lovelace": 500000000}},
        "stakePoolPledgeInfluence": "3/10",
        "stakePoolRetirementEpochBound": 18,
        "stakePoolVotingThresholds": {
            "constitutionalCommittee": {
                "default": "51/100",
                "stateOfNoConfidence": "51/100",
            },
            "hardForkInitiation": "51/100",
            "noConfidence": "51/100",
        },
        "treasuryExpansion": "1/5",
        "version": {"major": 9, "minor": 0},
    }


@pytest.fixture
def ogmios_protocol_parameters_response(ogmios_protocol_parameters):
    return {
        "method": "queryLedgerState/protocolParameters",
        "result": ogmios_protocol_parameters,
    }


@pytest.fixture(scope="session")
def cli_protocol_parameters_json():
    return {
        "collateralPercentage": 150,
        "committeeMaxTermLength": 146,
        "committeeMinSize": 7,
        "costModels": {
            "PlutusV1": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                228465,
                122,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                85848,
                228465,
                122,
                0,
                1,
                1,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                53384111,
                14333,
                10,
            ],
            "PlutusV2": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                228465,
                122,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                228465,
                122,
                0,
                1,
                1,
                85848,
                228465,
                122,
                0,
                1,
                1,
                955506,
                213312,
                0,
                2,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                43053543,
                10,
                53384111,
                14333,
                10,
                43574283,
                26308,
                10,
            ],
            "PlutusV3": [
                100788,
                420,
                1,
                1,
                1000,
                173,
                0,
                1,
                1000,
                59957,
                4,
                1,
                11183,
                32,
                201305,
                8356,
                4,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                16000,
                100,
                100,
                100,
                16000,
                100,
                94375,
                32,
                132994,
                32,
                61462,
                4,
                72010,
                178,
                0,
                1,
                22151,
                32,
                91189,
                769,
                4,
                2,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                1,
                1000,
                42921,
                4,
                2,
                24548,
                29498,
                38,
                1,
                898148,
                27279,
                1,
                51775,
                558,
                1,
                39184,
                1000,
                60594,
                1,
                141895,
                32,
                83150,
                32,
                15299,
                32,
                76049,
                1,
                13169,
                4,
                22100,
                10,
                28999,
                74,
                1,
                28999,
                74,
                1,
                43285,
                552,
                1,
                44749,
                541,
                1,
                33852,
                32,
                68246,
                32,
                72362,
                32,
                7243,
                32,
                7391,
                32,
                11546,
                32,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                90434,
                519,
                0,
                1,
                74433,
                32,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                1,
                85848,
                123203,
                7305,
                -900,
                1716,
                549,
                57,
                85848,
                0,
                1,
                955506,
                213312,
                0,
                2,
                270652,
                22588,
                4,
                1457325,
                64566,
                4,
                20467,
                1,
                4,
                0,
                141992,
                32,
                100788,
                420,
                1,
                1,
                81663,
                32,
                59498,
                32,
                20142,
                32,
                24588,
                32,
                20744,
                32,
                25933,
                32,
                24623,
                32,
                43053543,
                10,
                53384111,
                14333,
                10,
                43574283,
                26308,
                10,
                16000,
                100,
                16000,
                100,
                962335,
                18,
                2780678,
                6,
                442008,
                1,
                52538055,
                3756,
                18,
                267929,
                18,
                76433006,
                8868,
                18,
                52948122,
                18,
                1995836,
                36,
                3227919,
                12,
                901022,
                1,
                166917843,
                4307,
                36,
                284546,
                36,
                158221314,
                26549,
                36,
                74698472,
                36,
                333849714,
                1,
                254006273,
                72,
                2174038,
                72,
                2261318,
                64571,
                4,
                207616,
                8310,
                4,
                1293828,
                28716,
                63,
                0,
                1,
                1006041,
                43623,
                251,
                0,
                1,
            ],
        },
        "dRepActivity": 20,
        "dRepDeposit": 500000000,
        "dRepVotingThresholds": {
            "committeeNoConfidence": 0.6,
            "committeeNormal": 0.67,
            "hardForkInitiation": 0.6,
            "motionNoConfidence": 0.67,
            "ppEconomicGroup": 0.67,
            "ppGovGroup": 0.75,
            "ppNetworkGroup": 0.67,
            "ppTechnicalGroup": 0.67,
            "treasuryWithdrawal": 0.67,
            "updateToConstitution": 0.75,
        },
        "executionUnitPrices": {"priceMemory": 0.0577, "priceSteps": 0.0000721},
        "govActionDeposit": 100000000000,
        "govActionLifetime": 6,
        "maxBlockBodySize": 90112,
        "maxBlockExecutionUnits": {"memory": 62000000, "steps": 20000000000},
        "maxBlockExecutionUnitsMemory": 62000000,
        "maxBlockExecutionUnitsSteps": 20000000000,
        "maxBlockHeaderSize": 1100,
        "maxCollateralInputs": 3,
        "maxTxExecutionUnits": {"memory": 14000000, "steps": 10000000000},
        "maxTxExecutionUnitsMemory": 14000000,
        "maxTxExecutionUnitsSteps": 10000000000,
        "maxTxSize": 16384,
        "maxValueSize": 5000,
        "minFeeRefScriptCostPerByte": 15,
        "minPoolCost": 170000000,
        "minUTxOValue": 4310,
        "monetaryExpansion": 0.003,
        "poolPledgeInfluence": 0.3,
        "poolRetireMaxEpoch": 18,
        "poolVotingThresholds": {
            "committeeNoConfidence": 0.51,
            "committeeNormal": 0.51,
            "hardForkInitiation": 0.51,
            "motionNoConfidence": 0.51,
            "ppSecurityGroup": 0.51,
        },
        "protocolVersion": {"major": 9, "minor": 0},
        "protocolVersionMajor": 9,
        "protocolVersionMinor": 0,
        "stakeAddressDeposit": 2000000,
        "stakePoolDeposit": 500000000,
        "stakePoolTargetNum": 500,
        "treasuryCut": 0.2,
        "txFeeFixed": 155381,
        "txFeePerByte": 44,
        "decentralization": None,
        "extraPraosEntropy": None,
        "executionUnitPricesPriceMemory": 0.0577,
        "executionUnitPricesPriceSteps": 0.0000721,
        "coinsPerUtxoWord": 34482,
        "coinsPerUtxoByte": 4310,
        "utxoCostPerByte": 4310,
    }


@pytest.fixture(scope="session")
def fake_offline_transfer_general():
    fake = Faker()
    return {
        "offline_cli_version": f"{fake.random_digit()}.{fake.random_digit()}.{fake.random_digit()}",
        "online_cli_version": f"{fake.random_digit()}.{fake.random_digit()}.{fake.random_digit()}",
        "online_node_version": f"{fake.random_digit()}.{fake.random_digit()}.{fake.random_digit()}",
    }


@pytest.fixture(scope="session")
def fake_offline_transfer_protocol(
    cli_protocol_parameters_json, fake_genesis_parameters_json
):
    fake = Faker()
    return {
        "protocol_parameters": cli_protocol_parameters_json,
        "genesis_parameters": fake_genesis_parameters_json,
        "era": f"{fake.enum(Era).name}",
        "network": f"{fake.enum(Network).name}",
    }


@pytest.fixture(scope="session")
def fake_offline_transfer_history():
    fake = Faker()
    return {
        "date": fake.date_time(tzinfo=timezone.utc).strftime(DATE_FORMAT_2),
        "action": fake.sentence(),
    }


@pytest.fixture(scope="session")
def fake_offline_transfer_address(
    fake_payment_address, fake_transaction_id, fake_base16_address
):
    fake = Faker()
    name = fake.word()
    return {
        "address_file": f"{name}.payment.addr",
        "name": f"{name}.payment",
        "address": fake_payment_address,
        "base16": fake_base16_address,
        "encoding": "bech32",
        "type": "payment",
        "total_amount": fake.pyint(min_value=1_000_000, max_value=1_000_000_000_000),
        "used": fake.boolean(),
        "utxos": [
            {
                "input": {
                    "transaction_id": fake_transaction_id,
                    "index": 0,
                },
                "output": {
                    "address": fake_payment_address,
                    "amount": {
                        "coin": fake.pyint(
                            min_value=1_000_000, max_value=1_000_000_000_000
                        ),
                        "multi_asset": {},
                    },
                    "datum_hash": None,
                    "datum": None,
                    "script": None,
                },
            }
        ],
        "stake_address_info": [],
    }


@pytest.fixture(scope="session")
def fake_offline_transfer_file(config_file):
    fake = Faker()
    return {
        "name": fake.word(),
        "date": fake.future_date().strftime(DATE_FORMAT_2),
        "size": fake.pyint(min_value=1_000, max_value=1_000_000),
        "base64": base64_encoded_file(config_file).decode("utf-8"),
    }


@pytest.fixture(scope="session")
def test_tx_json():
    fake = Faker()
    cbor = (
        "84a70081825820b35a4ba9ef3ce21adcd6879d08553642224304704d206c74d3ffb3e6eed3ca28000d80018182581d60cc"
        "30497f4ff962f4c1dca54cceefe39f86f1d7179668009f8eb71e598200a1581cec8b7d1dd0b124e8333d3fa8d818f6eac0"
        "68231a287554e9ceae490ea24f5365636f6e6454657374746f6b656e1a009896804954657374746f6b656e1a0098968002"
        "1a000493e00e8009a1581cec8b7d1dd0b124e8333d3fa8d818f6eac068231a287554e9ceae490ea24f5365636f6e645465"
        "7374746f6b656e1a009896804954657374746f6b656e1a00989680075820592a2df0e091566969b3044626faa8023dabe6"
        "f39c78f33bed9e105e55159221a200828258206443a101bdb948366fc87369336224595d36d8b0eee5602cba8b81a024e5"
        "84735840846f408dee3b101fda0f0f7ca89e18b724b7ca6266eb29775d3967d6920cae7457accb91def9b77571e15dd2ed"
        "e38b12cf92496ce7382fa19eb90ab7f73e49008258205797dc2cc919dfec0bb849551ebdf30d96e5cbe0f33f734a87fe82"
        "6db30f7ef95840bdc771aa7b8c86a8ffcbe1b7a479c68503c8aa0ffde8059443055bf3e54b92f4fca5e0b9ca5bb11ab23b"
        "1390bb9ffce414fa398fc0b17f4dc76fe9f7e2c99c09018182018482051a075bcd1582041a075bcd0c8200581c9139e5c0"
        "a42f0f2389634c3dd18dc621f5594c5ba825d9a8883c66278200581c835600a2be276a18a4bebf0225d728f090f724f4c0"
        "acd591d066fa6ff5d90103a100a11902d1a16b7b706f6c6963795f69647da16d7b706f6c6963795f6e616d657da66b6465"
        "736372697074696f6e6a3c6f7074696f6e616c3e65696d6167656a3c72657175697265643e686c6f636174696f6ea36761"
        "7277656176656a3c6f7074696f6e616c3e6568747470736a3c6f7074696f6e616c3e64697066736a3c7265717569726564"
        "3e646e616d656a3c72657175697265643e667368613235366a3c72657175697265643e64747970656a3c72657175697265643e"
    )
    return {
        "type": f"Witnessed Tx {fake.enum(TransactionType).name}Era",
        "description": "Generated by PyCardano",
        "cborHex": cbor,
    }


@pytest.fixture(scope="session")
def fake_offline_transfer_transaction(
    fake_stake_address, fake_payment_address, test_tx_json
):
    fake = Faker()
    return {
        "type": fake.enum(TransactionType).name,
        "date": fake.future_date().strftime(DATE_FORMAT_2),
        "stake_address": fake_stake_address,
        "from_address": fake_payment_address,
        "from_name": fake.word(),
        "to_address": fake_payment_address,
        "to_name": fake.word(),
        "tx_json": test_tx_json,
    }


@pytest.fixture(scope="session")
def fake_offline_transfer(
    fake_offline_transfer_general,
    fake_offline_transfer_protocol,
    fake_offline_transfer_history,
    fake_offline_transfer_file,
    fake_offline_transfer_address,
    fake_offline_transfer_transaction,
):
    return {
        "general": fake_offline_transfer_general,
        "protocol": fake_offline_transfer_protocol,
        "history": [fake_offline_transfer_history],
        "files": [fake_offline_transfer_file],
        "transactions": [fake_offline_transfer_transaction],
        "addresses": [fake_offline_transfer_address],
    }


@pytest.fixture(scope="session")
def offline_transfer_file(fake_offline_transfer):
    offline_transfer_file_path = Path.cwd() / "offline-transfer.json"

    with open(offline_transfer_file_path, "w", encoding="utf-8") as file:
        file.write(json.dumps(fake_offline_transfer, indent=4))

    yield offline_transfer_file_path

    with contextlib.suppress(FileNotFoundError):
        offline_transfer_file_path.unlink()


@pytest.fixture
def client():
    with Client() as client:
        yield client


@pytest.fixture
def ogmios_chain_context():
    yield OgmiosChainContext("localhost", 1337)


@pytest.fixture
def yaci_devkit_chain_context():
    yield YaciDevkitChainContext(api_url="http://localhost:8080")


@pytest.fixture
def yaci_protocol_parameters():
    return {
        "min_fee_a": 44,
        "min_fee_b": 155381,
        "max_block_size": 90112,
        "max_tx_size": 16384,
        "max_block_header_size": 1100,
        "key_deposit": "2000000",
        "pool_deposit": "500000000",
        "a0": 0,
        "rho": 0.003,
        "tau": 0.2,
        "protocol_major_ver": 9,
        "protocol_minor_ver": 0,
        "min_pool_cost": "170000000",
        "cost_models": {
            "PlutusV1": {
                "addInteger-cpu-arguments-intercept": 100788,
                "addInteger-cpu-arguments-slope": 420,
                "addInteger-memory-arguments-intercept": 1,
                "addInteger-memory-arguments-slope": 1,
                "appendByteString-cpu-arguments-intercept": 1000,
                "appendByteString-cpu-arguments-slope": 173,
                "appendByteString-memory-arguments-intercept": 0,
                "appendByteString-memory-arguments-slope": 1,
                "appendString-cpu-arguments-intercept": 1000,
                "appendString-cpu-arguments-slope": 59957,
                "appendString-memory-arguments-intercept": 4,
                "appendString-memory-arguments-slope": 1,
                "bData-cpu-arguments": 11183,
                "bData-memory-arguments": 32,
                "blake2b_256-cpu-arguments-intercept": 201305,
                "blake2b_256-cpu-arguments-slope": 8356,
                "blake2b_256-memory-arguments": 4,
                "cekApplyCost-exBudgetCPU": 16000,
                "cekApplyCost-exBudgetMemory": 100,
                "cekBuiltinCost-exBudgetCPU": 16000,
                "cekBuiltinCost-exBudgetMemory": 100,
                "cekConstCost-exBudgetCPU": 16000,
                "cekConstCost-exBudgetMemory": 100,
                "cekDelayCost-exBudgetCPU": 16000,
                "cekDelayCost-exBudgetMemory": 100,
                "cekForceCost-exBudgetCPU": 16000,
                "cekForceCost-exBudgetMemory": 100,
                "cekLamCost-exBudgetCPU": 16000,
                "cekLamCost-exBudgetMemory": 100,
                "cekStartupCost-exBudgetCPU": 100,
                "cekStartupCost-exBudgetMemory": 100,
                "cekVarCost-exBudgetCPU": 16000,
                "cekVarCost-exBudgetMemory": 100,
                "chooseData-cpu-arguments": 94375,
                "chooseData-memory-arguments": 32,
                "chooseList-cpu-arguments": 132994,
                "chooseList-memory-arguments": 32,
                "chooseUnit-cpu-arguments": 61462,
                "chooseUnit-memory-arguments": 4,
                "consByteString-cpu-arguments-intercept": 72010,
                "consByteString-cpu-arguments-slope": 178,
                "consByteString-memory-arguments-intercept": 0,
                "consByteString-memory-arguments-slope": 1,
                "constrData-cpu-arguments": 22151,
                "constrData-memory-arguments": 32,
                "decodeUtf8-cpu-arguments-intercept": 91189,
                "decodeUtf8-cpu-arguments-slope": 769,
                "decodeUtf8-memory-arguments-intercept": 4,
                "decodeUtf8-memory-arguments-slope": 2,
                "divideInteger-cpu-arguments-constant": 85848,
                "divideInteger-cpu-arguments-model-arguments-intercept": 228465,
                "divideInteger-cpu-arguments-model-arguments-slope": 122,
                "divideInteger-memory-arguments-intercept": 0,
                "divideInteger-memory-arguments-minimum": 1,
                "divideInteger-memory-arguments-slope": 1,
                "encodeUtf8-cpu-arguments-intercept": 1000,
                "encodeUtf8-cpu-arguments-slope": 42921,
                "encodeUtf8-memory-arguments-intercept": 4,
                "encodeUtf8-memory-arguments-slope": 2,
                "equalsByteString-cpu-arguments-constant": 24548,
                "equalsByteString-cpu-arguments-intercept": 29498,
                "equalsByteString-cpu-arguments-slope": 38,
                "equalsByteString-memory-arguments": 1,
                "equalsData-cpu-arguments-intercept": 898148,
                "equalsData-cpu-arguments-slope": 27279,
                "equalsData-memory-arguments": 1,
                "equalsInteger-cpu-arguments-intercept": 51775,
                "equalsInteger-cpu-arguments-slope": 558,
                "equalsInteger-memory-arguments": 1,
                "equalsString-cpu-arguments-constant": 39184,
                "equalsString-cpu-arguments-intercept": 1000,
                "equalsString-cpu-arguments-slope": 60594,
                "equalsString-memory-arguments": 1,
                "fstPair-cpu-arguments": 141895,
                "fstPair-memory-arguments": 32,
                "headList-cpu-arguments": 83150,
                "headList-memory-arguments": 32,
                "iData-cpu-arguments": 15299,
                "iData-memory-arguments": 32,
                "ifThenElse-cpu-arguments": 76049,
                "ifThenElse-memory-arguments": 1,
                "indexByteString-cpu-arguments": 13169,
                "indexByteString-memory-arguments": 4,
                "lengthOfByteString-cpu-arguments": 22100,
                "lengthOfByteString-memory-arguments": 10,
                "lessThanByteString-cpu-arguments-intercept": 28999,
                "lessThanByteString-cpu-arguments-slope": 74,
                "lessThanByteString-memory-arguments": 1,
                "lessThanEqualsByteString-cpu-arguments-intercept": 28999,
                "lessThanEqualsByteString-cpu-arguments-slope": 74,
                "lessThanEqualsByteString-memory-arguments": 1,
                "lessThanEqualsInteger-cpu-arguments-intercept": 43285,
                "lessThanEqualsInteger-cpu-arguments-slope": 552,
                "lessThanEqualsInteger-memory-arguments": 1,
                "lessThanInteger-cpu-arguments-intercept": 44749,
                "lessThanInteger-cpu-arguments-slope": 541,
                "lessThanInteger-memory-arguments": 1,
                "listData-cpu-arguments": 33852,
                "listData-memory-arguments": 32,
                "mapData-cpu-arguments": 68246,
                "mapData-memory-arguments": 32,
                "mkCons-cpu-arguments": 72362,
                "mkCons-memory-arguments": 32,
                "mkNilData-cpu-arguments": 7243,
                "mkNilData-memory-arguments": 32,
                "mkNilPairData-cpu-arguments": 7391,
                "mkNilPairData-memory-arguments": 32,
                "mkPairData-cpu-arguments": 11546,
                "mkPairData-memory-arguments": 32,
                "modInteger-cpu-arguments-constant": 85848,
                "modInteger-cpu-arguments-model-arguments-intercept": 228465,
                "modInteger-cpu-arguments-model-arguments-slope": 122,
                "modInteger-memory-arguments-intercept": 0,
                "modInteger-memory-arguments-minimum": 1,
                "modInteger-memory-arguments-slope": 1,
                "multiplyInteger-cpu-arguments-intercept": 90434,
                "multiplyInteger-cpu-arguments-slope": 519,
                "multiplyInteger-memory-arguments-intercept": 0,
                "multiplyInteger-memory-arguments-slope": 1,
                "nullList-cpu-arguments": 74433,
                "nullList-memory-arguments": 32,
                "quotientInteger-cpu-arguments-constant": 85848,
                "quotientInteger-cpu-arguments-model-arguments-intercept": 228465,
                "quotientInteger-cpu-arguments-model-arguments-slope": 122,
                "quotientInteger-memory-arguments-intercept": 0,
                "quotientInteger-memory-arguments-minimum": 1,
                "quotientInteger-memory-arguments-slope": 1,
                "remainderInteger-cpu-arguments-constant": 85848,
                "remainderInteger-cpu-arguments-model-arguments-intercept": 228465,
                "remainderInteger-cpu-arguments-model-arguments-slope": 122,
                "remainderInteger-memory-arguments-intercept": 0,
                "remainderInteger-memory-arguments-minimum": 1,
                "remainderInteger-memory-arguments-slope": 1,
                "sha2_256-cpu-arguments-intercept": 270652,
                "sha2_256-cpu-arguments-slope": 22588,
                "sha2_256-memory-arguments": 4,
                "sha3_256-cpu-arguments-intercept": 1457325,
                "sha3_256-cpu-arguments-slope": 64566,
                "sha3_256-memory-arguments": 4,
                "sliceByteString-cpu-arguments-intercept": 20467,
                "sliceByteString-cpu-arguments-slope": 1,
                "sliceByteString-memory-arguments-intercept": 4,
                "sliceByteString-memory-arguments-slope": 0,
                "sndPair-cpu-arguments": 141992,
                "sndPair-memory-arguments": 32,
                "subtractInteger-cpu-arguments-intercept": 100788,
                "subtractInteger-cpu-arguments-slope": 420,
                "subtractInteger-memory-arguments-intercept": 1,
                "subtractInteger-memory-arguments-slope": 1,
                "tailList-cpu-arguments": 81663,
                "tailList-memory-arguments": 32,
                "trace-cpu-arguments": 59498,
                "trace-memory-arguments": 32,
                "unBData-cpu-arguments": 20142,
                "unBData-memory-arguments": 32,
                "unConstrData-cpu-arguments": 24588,
                "unConstrData-memory-arguments": 32,
                "unIData-cpu-arguments": 20744,
                "unIData-memory-arguments": 32,
                "unListData-cpu-arguments": 25933,
                "unListData-memory-arguments": 32,
                "unMapData-cpu-arguments": 24623,
                "unMapData-memory-arguments": 32,
                "verifyEd25519Signature-cpu-arguments-intercept": 53384111,
                "verifyEd25519Signature-cpu-arguments-slope": 14333,
                "verifyEd25519Signature-memory-arguments": 10,
            },
            "PlutusV2": {
                "addInteger-cpu-arguments-intercept": 100788,
                "addInteger-cpu-arguments-slope": 420,
                "addInteger-memory-arguments-intercept": 1,
                "addInteger-memory-arguments-slope": 1,
                "appendByteString-cpu-arguments-intercept": 1000,
                "appendByteString-cpu-arguments-slope": 173,
                "appendByteString-memory-arguments-intercept": 0,
                "appendByteString-memory-arguments-slope": 1,
                "appendString-cpu-arguments-intercept": 1000,
                "appendString-cpu-arguments-slope": 59957,
                "appendString-memory-arguments-intercept": 4,
                "appendString-memory-arguments-slope": 1,
                "bData-cpu-arguments": 11183,
                "bData-memory-arguments": 32,
                "blake2b_256-cpu-arguments-intercept": 201305,
                "blake2b_256-cpu-arguments-slope": 8356,
                "blake2b_256-memory-arguments": 4,
                "cekApplyCost-exBudgetCPU": 16000,
                "cekApplyCost-exBudgetMemory": 100,
                "cekBuiltinCost-exBudgetCPU": 16000,
                "cekBuiltinCost-exBudgetMemory": 100,
                "cekConstCost-exBudgetCPU": 16000,
                "cekConstCost-exBudgetMemory": 100,
                "cekDelayCost-exBudgetCPU": 16000,
                "cekDelayCost-exBudgetMemory": 100,
                "cekForceCost-exBudgetCPU": 16000,
                "cekForceCost-exBudgetMemory": 100,
                "cekLamCost-exBudgetCPU": 16000,
                "cekLamCost-exBudgetMemory": 100,
                "cekStartupCost-exBudgetCPU": 100,
                "cekStartupCost-exBudgetMemory": 100,
                "cekVarCost-exBudgetCPU": 16000,
                "cekVarCost-exBudgetMemory": 100,
                "chooseData-cpu-arguments": 94375,
                "chooseData-memory-arguments": 32,
                "chooseList-cpu-arguments": 132994,
                "chooseList-memory-arguments": 32,
                "chooseUnit-cpu-arguments": 61462,
                "chooseUnit-memory-arguments": 4,
                "consByteString-cpu-arguments-intercept": 72010,
                "consByteString-cpu-arguments-slope": 178,
                "consByteString-memory-arguments-intercept": 0,
                "consByteString-memory-arguments-slope": 1,
                "constrData-cpu-arguments": 22151,
                "constrData-memory-arguments": 32,
                "decodeUtf8-cpu-arguments-intercept": 91189,
                "decodeUtf8-cpu-arguments-slope": 769,
                "decodeUtf8-memory-arguments-intercept": 4,
                "decodeUtf8-memory-arguments-slope": 2,
                "divideInteger-cpu-arguments-constant": 85848,
                "divideInteger-cpu-arguments-model-arguments-intercept": 228465,
                "divideInteger-cpu-arguments-model-arguments-slope": 122,
                "divideInteger-memory-arguments-intercept": 0,
                "divideInteger-memory-arguments-minimum": 1,
                "divideInteger-memory-arguments-slope": 1,
                "encodeUtf8-cpu-arguments-intercept": 1000,
                "encodeUtf8-cpu-arguments-slope": 42921,
                "encodeUtf8-memory-arguments-intercept": 4,
                "encodeUtf8-memory-arguments-slope": 2,
                "equalsByteString-cpu-arguments-constant": 24548,
                "equalsByteString-cpu-arguments-intercept": 29498,
                "equalsByteString-cpu-arguments-slope": 38,
                "equalsByteString-memory-arguments": 1,
                "equalsData-cpu-arguments-intercept": 898148,
                "equalsData-cpu-arguments-slope": 27279,
                "equalsData-memory-arguments": 1,
                "equalsInteger-cpu-arguments-intercept": 51775,
                "equalsInteger-cpu-arguments-slope": 558,
                "equalsInteger-memory-arguments": 1,
                "equalsString-cpu-arguments-constant": 39184,
                "equalsString-cpu-arguments-intercept": 1000,
                "equalsString-cpu-arguments-slope": 60594,
                "equalsString-memory-arguments": 1,
                "fstPair-cpu-arguments": 141895,
                "fstPair-memory-arguments": 32,
                "headList-cpu-arguments": 83150,
                "headList-memory-arguments": 32,
                "iData-cpu-arguments": 15299,
                "iData-memory-arguments": 32,
                "ifThenElse-cpu-arguments": 76049,
                "ifThenElse-memory-arguments": 1,
                "indexByteString-cpu-arguments": 13169,
                "indexByteString-memory-arguments": 4,
                "lengthOfByteString-cpu-arguments": 22100,
                "lengthOfByteString-memory-arguments": 10,
                "lessThanByteString-cpu-arguments-intercept": 28999,
                "lessThanByteString-cpu-arguments-slope": 74,
                "lessThanByteString-memory-arguments": 1,
                "lessThanEqualsByteString-cpu-arguments-intercept": 28999,
                "lessThanEqualsByteString-cpu-arguments-slope": 74,
                "lessThanEqualsByteString-memory-arguments": 1,
                "lessThanEqualsInteger-cpu-arguments-intercept": 43285,
                "lessThanEqualsInteger-cpu-arguments-slope": 552,
                "lessThanEqualsInteger-memory-arguments": 1,
                "lessThanInteger-cpu-arguments-intercept": 44749,
                "lessThanInteger-cpu-arguments-slope": 541,
                "lessThanInteger-memory-arguments": 1,
                "listData-cpu-arguments": 33852,
                "listData-memory-arguments": 32,
                "mapData-cpu-arguments": 68246,
                "mapData-memory-arguments": 32,
                "mkCons-cpu-arguments": 72362,
                "mkCons-memory-arguments": 32,
                "mkNilData-cpu-arguments": 7243,
                "mkNilData-memory-arguments": 32,
                "mkNilPairData-cpu-arguments": 7391,
                "mkNilPairData-memory-arguments": 32,
                "mkPairData-cpu-arguments": 11546,
                "mkPairData-memory-arguments": 32,
                "modInteger-cpu-arguments-constant": 85848,
                "modInteger-cpu-arguments-model-arguments-intercept": 228465,
                "modInteger-cpu-arguments-model-arguments-slope": 122,
                "modInteger-memory-arguments-intercept": 0,
                "modInteger-memory-arguments-minimum": 1,
                "modInteger-memory-arguments-slope": 1,
                "multiplyInteger-cpu-arguments-intercept": 90434,
                "multiplyInteger-cpu-arguments-slope": 519,
                "multiplyInteger-memory-arguments-intercept": 0,
                "multiplyInteger-memory-arguments-slope": 1,
                "nullList-cpu-arguments": 74433,
                "nullList-memory-arguments": 32,
                "quotientInteger-cpu-arguments-constant": 85848,
                "quotientInteger-cpu-arguments-model-arguments-intercept": 228465,
                "quotientInteger-cpu-arguments-model-arguments-slope": 122,
                "quotientInteger-memory-arguments-intercept": 0,
                "quotientInteger-memory-arguments-minimum": 1,
                "quotientInteger-memory-arguments-slope": 1,
                "remainderInteger-cpu-arguments-constant": 85848,
                "remainderInteger-cpu-arguments-model-arguments-intercept": 228465,
                "remainderInteger-cpu-arguments-model-arguments-slope": 122,
                "remainderInteger-memory-arguments-intercept": 0,
                "remainderInteger-memory-arguments-minimum": 1,
                "remainderInteger-memory-arguments-slope": 1,
                "serialiseData-cpu-arguments-intercept": 955506,
                "serialiseData-cpu-arguments-slope": 213312,
                "serialiseData-memory-arguments-intercept": 0,
                "serialiseData-memory-arguments-slope": 2,
                "sha2_256-cpu-arguments-intercept": 270652,
                "sha2_256-cpu-arguments-slope": 22588,
                "sha2_256-memory-arguments": 4,
                "sha3_256-cpu-arguments-intercept": 1457325,
                "sha3_256-cpu-arguments-slope": 64566,
                "sha3_256-memory-arguments": 4,
                "sliceByteString-cpu-arguments-intercept": 20467,
                "sliceByteString-cpu-arguments-slope": 1,
                "sliceByteString-memory-arguments-intercept": 4,
                "sliceByteString-memory-arguments-slope": 0,
                "sndPair-cpu-arguments": 141992,
                "sndPair-memory-arguments": 32,
                "subtractInteger-cpu-arguments-intercept": 100788,
                "subtractInteger-cpu-arguments-slope": 420,
                "subtractInteger-memory-arguments-intercept": 1,
                "subtractInteger-memory-arguments-slope": 1,
                "tailList-cpu-arguments": 81663,
                "tailList-memory-arguments": 32,
                "trace-cpu-arguments": 59498,
                "trace-memory-arguments": 32,
                "unBData-cpu-arguments": 20142,
                "unBData-memory-arguments": 32,
                "unConstrData-cpu-arguments": 24588,
                "unConstrData-memory-arguments": 32,
                "unIData-cpu-arguments": 20744,
                "unIData-memory-arguments": 32,
                "unListData-cpu-arguments": 25933,
                "unListData-memory-arguments": 32,
                "unMapData-cpu-arguments": 24623,
                "unMapData-memory-arguments": 32,
                "verifyEcdsaSecp256k1Signature-cpu-arguments": 43053543,
                "verifyEcdsaSecp256k1Signature-memory-arguments": 10,
                "verifyEd25519Signature-cpu-arguments-intercept": 53384111,
                "verifyEd25519Signature-cpu-arguments-slope": 14333,
                "verifyEd25519Signature-memory-arguments": 10,
                "verifySchnorrSecp256k1Signature-cpu-arguments-intercept": 43574283,
                "verifySchnorrSecp256k1Signature-cpu-arguments-slope": 26308,
                "verifySchnorrSecp256k1Signature-memory-arguments": 10,
            },
            "PlutusV3": {
                "100": 541,
                "101": 1,
                "102": 33852,
                "103": 32,
                "104": 68246,
                "105": 32,
                "106": 72362,
                "107": 32,
                "108": 7243,
                "109": 32,
                "110": 7391,
                "111": 32,
                "112": 11546,
                "113": 32,
                "114": 85848,
                "115": 123203,
                "116": 7305,
                "117": -900,
                "118": 1716,
                "119": 549,
                "120": 57,
                "121": 85848,
                "122": 0,
                "123": 1,
                "124": 90434,
                "125": 519,
                "126": 0,
                "127": 1,
                "128": 74433,
                "129": 32,
                "130": 85848,
                "131": 123203,
                "132": 7305,
                "133": -900,
                "134": 1716,
                "135": 549,
                "136": 57,
                "137": 85848,
                "138": 0,
                "139": 1,
                "140": 1,
                "141": 85848,
                "142": 123203,
                "143": 7305,
                "144": -900,
                "145": 1716,
                "146": 549,
                "147": 57,
                "148": 85848,
                "149": 0,
                "150": 1,
                "151": 955506,
                "152": 213312,
                "153": 0,
                "154": 2,
                "155": 270652,
                "156": 22588,
                "157": 4,
                "158": 1457325,
                "159": 64566,
                "160": 4,
                "161": 20467,
                "162": 1,
                "163": 4,
                "164": 0,
                "165": 141992,
                "166": 32,
                "167": 100788,
                "168": 420,
                "169": 1,
                "170": 1,
                "171": 81663,
                "172": 32,
                "173": 59498,
                "174": 32,
                "175": 20142,
                "176": 32,
                "177": 24588,
                "178": 32,
                "179": 20744,
                "180": 32,
                "181": 25933,
                "182": 32,
                "183": 24623,
                "184": 32,
                "185": 43053543,
                "186": 10,
                "187": 53384111,
                "188": 14333,
                "189": 10,
                "190": 43574283,
                "191": 26308,
                "192": 10,
                "193": 16000,
                "194": 100,
                "195": 16000,
                "196": 100,
                "197": 962335,
                "198": 18,
                "199": 2780678,
                "200": 6,
                "201": 442008,
                "202": 1,
                "203": 52538055,
                "204": 3756,
                "205": 18,
                "206": 267929,
                "207": 18,
                "208": 76433006,
                "209": 8868,
                "210": 18,
                "211": 52948122,
                "212": 18,
                "213": 1995836,
                "214": 36,
                "215": 3227919,
                "216": 12,
                "217": 901022,
                "218": 1,
                "219": 166917843,
                "220": 4307,
                "221": 36,
                "222": 284546,
                "223": 36,
                "224": 158221314,
                "225": 26549,
                "226": 36,
                "227": 74698472,
                "228": 36,
                "229": 333849714,
                "230": 1,
                "231": 254006273,
                "232": 72,
                "233": 2174038,
                "234": 72,
                "235": 2261318,
                "236": 64571,
                "237": 4,
                "238": 207616,
                "239": 8310,
                "240": 4,
                "241": 1293828,
                "242": 28716,
                "243": 63,
                "244": 0,
                "245": 1,
                "246": 1006041,
                "247": 43623,
                "248": 251,
                "249": 0,
                "250": 1,
                "000": 100788,
                "001": 420,
                "002": 1,
                "003": 1,
                "004": 1000,
                "005": 173,
                "006": 0,
                "007": 1,
                "008": 1000,
                "009": 59957,
                "010": 4,
                "011": 1,
                "012": 11183,
                "013": 32,
                "014": 201305,
                "015": 8356,
                "016": 4,
                "017": 16000,
                "018": 100,
                "019": 16000,
                "020": 100,
                "021": 16000,
                "022": 100,
                "023": 16000,
                "024": 100,
                "025": 16000,
                "026": 100,
                "027": 16000,
                "028": 100,
                "029": 100,
                "030": 100,
                "031": 16000,
                "032": 100,
                "033": 94375,
                "034": 32,
                "035": 132994,
                "036": 32,
                "037": 61462,
                "038": 4,
                "039": 72010,
                "040": 178,
                "041": 0,
                "042": 1,
                "043": 22151,
                "044": 32,
                "045": 91189,
                "046": 769,
                "047": 4,
                "048": 2,
                "049": 85848,
                "050": 123203,
                "051": 7305,
                "052": -900,
                "053": 1716,
                "054": 549,
                "055": 57,
                "056": 85848,
                "057": 0,
                "058": 1,
                "059": 1,
                "060": 1000,
                "061": 42921,
                "062": 4,
                "063": 2,
                "064": 24548,
                "065": 29498,
                "066": 38,
                "067": 1,
                "068": 898148,
                "069": 27279,
                "070": 1,
                "071": 51775,
                "072": 558,
                "073": 1,
                "074": 39184,
                "075": 1000,
                "076": 60594,
                "077": 1,
                "078": 141895,
                "079": 32,
                "080": 83150,
                "081": 32,
                "082": 15299,
                "083": 32,
                "084": 76049,
                "085": 1,
                "086": 13169,
                "087": 4,
                "088": 22100,
                "089": 10,
                "090": 28999,
                "091": 74,
                "092": 1,
                "093": 28999,
                "094": 74,
                "095": 1,
                "096": 43285,
                "097": 552,
                "098": 1,
                "099": 44749,
            },
        },
        "price_mem": 0.0577,
        "price_step": 0.0000721,
        "max_tx_ex_mem": "14000000",
        "max_tx_ex_steps": "10000000000",
        "max_block_ex_mem": "62000000",
        "max_block_ex_steps": "20000000000",
        "max_val_size": "5000",
        "collateral_percent": 150,
        "max_collateral_inputs": 3,
        "coins_per_utxo_size": "4310",
        "pvt_motion_no_confidence": 0.51,
        "pvt_committee_normal": 0.51,
        "pvt_committee_no_confidence": 0.51,
        "pvt_hard_fork_initiation": 0.51,
        "dvt_motion_no_confidence": 0.67,
        "dvt_committee_normal": 0.67,
        "dvt_committee_no_confidence": 0.6,
        "dvt_update_to_constitution": 0.75,
        "dvt_hard_fork_initiation": 0.6,
        "dvt_ppnetwork_group": 0.67,
        "dvt_ppeconomic_group": 0.67,
        "dvt_pptechnical_group": 0.67,
        "dvt_ppgov_group": 0.75,
        "dvt_treasury_withdrawal": 0.67,
        "committee_min_size": 0,
        "committee_max_term_length": 146,
        "gov_action_lifetime": 6,
        "gov_action_deposit": 1000000000,
        "drep_deposit": 500000000,
        "drep_activity": 20,
        "min_fee_ref_script_cost_per_byte": 15,
        "e_max": 18,
        "n_opt": 100,
    }


@pytest.fixture
def yaci_utxos():
    return [
        {
            "tx_hash": "a6ce90a9a5ef8ef73858effdae375ba50f302d3c6c8b587a15eaa8fa98ddf741",
            "output_index": 0,
            "address": "addr_test1qraen6hr9zs5yae8cxnhlkh7rk2nfl7rnpg0xvmel3a0xf70v3kz6ee7mtq86x6gmrnw8j7kuf485902akkr7tlcx24qemz34a",
            "amount": [{"unit": "lovelace", "quantity": "10000000000"}],
            "data_hash": None,
            "inline_datum": None,
            "reference_script_hash": None,
            "epoch": 0,
            "block_number": -1,
            "block_time": 1729217647,
        }
    ]


@pytest.fixture
def ogmios_era_summary():
    fake = Faker()
    return [
        EraSummary(
            start_time=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            start_slot=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            start_epoch=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            end_time=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            end_slot=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            end_epoch=fake.pyint(min_value=100, max_value=999),
            epoch_length=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            slot_length=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
            safe_zone=fake.pyint(min_value=1_000_000, max_value=1_000_000_000),
        )
        for _ in range(7)
    ]


@pytest.fixture
def ogmios_genesis_conway_config():
    return {
        "era": "conway",
        "constitution": {
            "metadata": {
                "url": "ipfs://bafkreifnwj6zpu3ixa4siz2lndqybyc5wnnt3jkwyutci4e2tmbnj3xrdm",
                "hash": "ca41a91f399259bcefe57f9858e91f6d00e1a38d6d9c63d4052914ea7bd70cb2",
            },
            "guardrails": {
                "hash": "fa24fb305126805cf2164c161d852a0e7330cf988f1fe558cf7d4a64"
            },
        },
        "constitutionalCommittee": {
            "members": [
                {
                    "id": "349e55f83e9af24813e6cb368df6a80d38951b2a334dfcdf26815558",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
                {
                    "id": "84aebcfd3e00d0f87af918fc4b5e00135f407e379893df7e7d392c6a",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
                {
                    "id": "b6012034ba0a7e4afbbf2c7a1432f8824aee5299a48e38e41a952686",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
                {
                    "id": "ce8b37a72b178a37bbd3236daa7b2c158c9d3604e7aa667e6c6004b7",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
                {
                    "id": "df0e83bde65416dade5b1f97e7f115cc1ff999550ad968850783fe50",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
                {
                    "id": "e8165b3328027ee0d74b1f07298cb092fd99aa7697a1436f5997f625",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
                {
                    "id": "f0dc2c00d92a45521267be2d5de1c485f6f9d14466d7e16062897cf7",
                    "mandate": {"epoch": 580},
                    "from": "verificationKey",
                },
            ],
            "quorum": "2/3",
        },
        "updatableParameters": {
            "stakePoolVotingThresholds": {
                "noConfidence": "51/100",
                "constitutionalCommittee": {
                    "default": "51/100",
                    "stateOfNoConfidence": "51/100",
                },
                "hardForkInitiation": "51/100",
            },
            "delegateRepresentativeVotingThresholds": {
                "noConfidence": "67/100",
                "constitutionalCommittee": {
                    "default": "67/100",
                    "stateOfNoConfidence": "3/5",
                },
                "constitution": "3/4",
                "hardForkInitiation": "3/5",
                "protocolParametersUpdate": {
                    "network": "67/100",
                    "economic": "67/100",
                    "technical": "67/100",
                    "governance": "3/4",
                },
                "treasuryWithdrawals": "67/100",
            },
            "constitutionalCommitteeMinSize": 7,
            "constitutionalCommitteeMaxTermLength": 146,
            "governanceActionLifetime": 6,
            "governanceActionDeposit": {"ada": {"lovelace": 100000000000}},
            "delegateRepresentativeDeposit": {"ada": {"lovelace": 500000000}},
            "delegateRepresentativeMaxIdleTime": 20,
        },
    }


@pytest.fixture
def ogmios_genesis_shelley_config():
    return {
        "era": "shelley",
        "startTime": "2017-09-23T21:44:51Z",
        "networkMagic": 764824073,
        "network": "mainnet",
        "activeSlotsCoefficient": "1/20",
        "securityParameter": 2160,
        "epochLength": 432000,
        "slotsPerKesPeriod": 129600,
        "maxKesEvolutions": 62,
        "slotLength": {"milliseconds": 1000},
        "updateQuorum": 5,
        "maxLovelaceSupply": 45000000000000000,
        "initialParameters": {
            "minFeeCoefficient": 44,
            "minFeeConstant": {"ada": {"lovelace": 155381}},
            "maxBlockBodySize": {"bytes": 65536},
            "maxBlockHeaderSize": {"bytes": 1100},
            "maxTransactionSize": {"bytes": 16384},
            "stakeCredentialDeposit": {"ada": {"lovelace": 2000000}},
            "stakePoolDeposit": {"ada": {"lovelace": 500000000}},
            "stakePoolRetirementEpochBound": 18,
            "desiredNumberOfStakePools": 150,
            "stakePoolPledgeInfluence": "3/10",
            "minStakePoolCost": {"ada": {"lovelace": 340000000}},
            "monetaryExpansion": "3/1000",
            "treasuryExpansion": "1/5",
            "federatedBlockProductionRatio": "1/1",
            "extraEntropy": "neutral",
            "minUtxoDepositConstant": {"ada": {"lovelace": 1000000}},
            "minUtxoDepositCoefficient": 0,
            "version": {"major": 2, "minor": 0},
        },
        "initialDelegates": [
            {
                "issuer": {
                    "id": "162f94554ac8c225383a2248c245659eda870eaa82d0ef25fc7dcd82"
                },
                "delegate": {
                    "id": "4485708022839a7b9b8b639a939c85ec0ed6999b5b6dc651b03c43f6",
                    "vrfVerificationKeyHash": "aba81e764b71006c515986bf7b37a72fbb5554f78e6775f08e384dbd572a4b32",
                },
            },
            {
                "issuer": {
                    "id": "2075a095b3c844a29c24317a94a643ab8e22d54a3a3a72a420260af6"
                },
                "delegate": {
                    "id": "6535db26347283990a252313a7903a45e3526ec25ddba381c071b25b",
                    "vrfVerificationKeyHash": "fcaca997b8105bd860876348fc2c6e68b13607f9bbd23515cd2193b555d267af",
                },
            },
            {
                "issuer": {
                    "id": "268cfc0b89e910ead22e0ade91493d8212f53f3e2164b2e4bef0819b"
                },
                "delegate": {
                    "id": "1d4f2e1fda43070d71bb22a5522f86943c7c18aeb4fa47a362c27e23",
                    "vrfVerificationKeyHash": "63ef48bc5355f3e7973100c371d6a095251c80ceb40559f4750aa7014a6fb6db",
                },
            },
            {
                "issuer": {
                    "id": "60baee25cbc90047e83fd01e1e57dc0b06d3d0cb150d0ab40bbfead1"
                },
                "delegate": {
                    "id": "7f72a1826ae3b279782ab2bc582d0d2958de65bd86b2c4f82d8ba956",
                    "vrfVerificationKeyHash": "c0546d9aa5740afd569d3c2d9c412595cd60822bb6d9a4e8ce6c43d12bd0f674",
                },
            },
            {
                "issuer": {
                    "id": "ad5463153dc3d24b9ff133e46136028bdc1edbb897f5a7cf1b37950c"
                },
                "delegate": {
                    "id": "d9e5c76ad5ee778960804094a389f0b546b5c2b140a62f8ec43ea54d",
                    "vrfVerificationKeyHash": "64fa87e8b29a5b7bfbd6795677e3e878c505bc4a3649485d366b50abadec92d7",
                },
            },
            {
                "issuer": {
                    "id": "b9547b8a57656539a8d9bc42c008e38d9c8bd9c8adbb1e73ad529497"
                },
                "delegate": {
                    "id": "855d6fc1e54274e331e34478eeac8d060b0b90c1f9e8a2b01167c048",
                    "vrfVerificationKeyHash": "66d5167a1f426bd1adcc8bbf4b88c280d38c148d135cb41e3f5a39f948ad7fcc",
                },
            },
            {
                "issuer": {
                    "id": "f7b341c14cd58fca4195a9b278cce1ef402dc0e06deb77e543cd1757"
                },
                "delegate": {
                    "id": "69ae12f9e45c0c9122356c8e624b1fbbed6c22a2e3b4358cf0cb5011",
                    "vrfVerificationKeyHash": "6394a632af51a32768a6f12dac3485d9c0712d0b54e3f389f355385762a478f2",
                },
            },
        ],
        "initialFunds": {},
        "initialStakePools": {"stakePools": {}, "delegators": {}},
    }


@pytest.fixture
def ogmios_genesis_conway_config_response(ogmios_genesis_conway_config):
    return {
        "method": "queryNetwork/genesisConfiguration",
        "result": ogmios_genesis_conway_config,
    }


@pytest.fixture
def ogmios_genesis_shelley_config_response(ogmios_genesis_shelley_config):
    return {
        "method": "queryNetwork/genesisConfiguration",
        "result": ogmios_genesis_shelley_config,
    }


@pytest.fixture
def fake_utxos():
    return [
        {
            "transaction": {
                "id": "3a42f652bd8dee788577e8c39b6217db3df659c33b10a2814c20fb66089ca167"
            },
            "index": 1,
            "address": "addr_test1qraen6hr9zs5yae8cxnhlkh7rk2nfl7rnpg0xvmel3a0xf70v3kz6ee7mtq86x6gmrnw8j7kuf485902akkr7tlcx24qemz34a",
            "value": {"ada": {"lovelace": 9858539}},
        },
        {
            "transaction": {
                "id": "c93d5dac64e3267abd2a91b9759e0d08395090d7bd89dfdfecd7ccc566661bcd"
            },
            "index": 1,
            "address": "addr_test1qraen6hr9zs5yae8cxnhlkh7rk2nfl7rnpg0xvmel3a0xf70v3kz6ee7mtq86x6gmrnw8j7kuf485902akkr7tlcx24qemz34a",
            "value": {"ada": {"lovelace": 9654079}},
        },
        {
            "transaction": {
                "id": "a29b70c94e4713825ae8f8771a09ba20ef0cc2cc4a1ea44b69673923cb745b77"
            },
            "index": 0,
            "address": "addr_test1qraen6hr9zs5yae8cxnhlkh7rk2nfl7rnpg0xvmel3a0xf70v3kz6ee7mtq86x6gmrnw8j7kuf485902akkr7tlcx24qemz34a",
            "value": {
                "ada": {"lovelace": 7094260},
                "0499adba96c80ed30dc5ac4bc7aa540835838ba219c0ea21c2f1e704": {
                    "5547546f79313336": 1,
                    "5547546f79323135": 1,
                    "5547546f79333131": 1,
                },
                "04f57233694aec7d1d594a8dd207fdbd3b63a1246fb637c260ec9a85": {
                    "4465727050617373313533": 1,
                    "44657270506173733236": 1,
                },
                "0d4d94a639c1f29f516e20911c1feea0f6b22ff468dcaacc9d02c381": {
                    "24444f55474850617373323839": 1,
                    "24444f55474850617373393239": 1,
                },
                "1d5ff173a5897a76d75a56b22ab001cd3d73463b8a14e21b5cfc3d01": {
                    "4c6f737443726f776e313032": 1
                },
                "1d8b26107c604d36e24963be3ba26f264245cae0e10c7fa15846efd2": {
                    "466f7878656431343932": 1
                },
                "2341201e2508eaebd9acaecbaa7630350cee6ebf437c52cc42bab23e": {
                    "477265656479476f626c696e7331393233": 1,
                    "477265656479476f626c696e7332333939": 1,
                    "477265656479476f626c696e7333323838": 1,
                    "477265656479476f626c696e73333539": 1,
                    "477265656479476f626c696e7334383536": 1,
                    "477265656479476f626c696e7335343833": 1,
                    "477265656479476f626c696e73373230": 1,
                    "477265656479476f626c696e73393634": 1,
                },
                "2f8f1726932ca6b46efd9cc6ef4c426304d8dbae74d033a8bc4edef4": {
                    "5269636b526f6c6c323431": 1,
                    "5269636b526f6c6c333335": 1,
                    "5269636b526f6c6c343230": 1,
                },
                "430647cb0eb21a64d250d1451c910eac5227666da00cd39eed1854ec": {
                    "417065735249504e465453657269657331353936": 1,
                    "417065735249504e465453657269657331363432": 1,
                    "417065735249504e465453657269657333323531": 1,
                    "417065735249504e4654536572696573393731": 1,
                },
                "53abd3b2432d7edfd7c59a11e577c872a898847e230e46c63c42938c": {
                    "444f4c4c59": 87000
                },
                "65bdf33f8f7fd4debeb2ad659473749eb4eac177e06650bb75a8fe50": {
                    "4d69746872546f6b656e": 1
                },
                "66fade242e56c2ce1b0a5beb20e905378f6e016bd24cf22bc617f2c2": {
                    "6265706570617373313035": 1,
                    "6265706570617373343635": 1,
                },
                "6e0dcc39f9cd4189953c170b763913529483a3709bd85c24b19bb234": {
                    "4570737465696e4c697374313334": 1,
                    "4570737465696e4c6973743831": 1,
                },
                "7003c12cda07c3ab9acc99ce68cf2a476dc7ea3ba8b35d85cdb096e5": {
                    "506570654275726e50617373323837": 1
                },
                "72007ec54b04959442a5cc1b317a7389ae28ade9855deac87d6fec4d": {
                    "41706573522e492e505469636b657450617373313132": 1,
                    "41706573522e492e505469636b657450617373323933": 1,
                },
                "792f1fdb68bf6e6fd72aed1bed3f14c9593edbcb2f9bd64f0b55d619": {
                    "4e657266436f696e50617373313130": 1,
                    "4e657266436f696e50617373313330": 1,
                    "4e657266436f696e50617373323139": 1,
                },
                "9a6de60bcd6dceef3e84b3d5e012f247236866fc7b4fedd1fd44b2cb": {
                    "486f6d656c65737342756d73313034": 1,
                    "486f6d656c65737342756d73333030": 1,
                    "486f6d656c65737342756d73343135": 1,
                    "486f6d656c65737342756d73343237": 1,
                    "486f6d656c65737342756d733436": 1,
                    "486f6d656c65737342756d73343635": 1,
                },
                "b72a07053117e192339ea4fe285f99f91eb80452a7d313bbb0872285": {
                    "4164616e697461343831": 1,
                    "4164616e697461353131": 1,
                },
                "d3f429f3702cbc4b0dd2616f88baf6cf5d55d922c4d50bdd4be115ae": {
                    "427562756c6c7331313037": 1,
                    "427562756c6c7331313634": 1,
                    "427562756c6c7331323635": 1,
                    "427562756c6c7331323931": 1,
                    "427562756c6c7332303238": 1,
                },
                "d64a52a708f88252f4fb3b16014c81e605b4b5d0aa3480c02fcc2e2f": {
                    "484f415244": 907046382
                },
                "e399578b7e763bc181ce8b45aabc65245d9be7c7e1edf68fbeb1d494": {
                    "436861726c657350617373353234": 1
                },
            },
        },
    ]


@pytest.fixture
def ogmios_utxos_response(fake_utxos):
    return {"method": "queryLedgerState/utxo", "result": fake_utxos}


@pytest.fixture
def ogmios_network_tip_response(fake_utxos):
    return {
        "method": "queryNetwork/tip",
        "result": {
            "slot": 137467329,
            "id": "8231935154b93fc54c6f7d3f91a50ecd40860a039a7166bae68a5ed5ba719d49",
        },
    }
